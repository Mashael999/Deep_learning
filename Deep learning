{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "220b95af",
   "metadata": {},
   "source": [
    "## Install libraries needed"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "de6ed9ab",
   "metadata": {},
   "outputs": [],
   "source": [
    "## install some new libraries needed in this project\n",
    "\n",
    "#! pip install cv2\n",
    "#! pip install keras\n",
    "#! pip install tensorflow"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5dd59436",
   "metadata": {},
   "source": [
    "## Import libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "33fb6d9a",
   "metadata": {},
   "outputs": [],
   "source": [
    "## import the libraries we used in this project\n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np \n",
    "import pickle\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "\n",
    "import os, os.path\n",
    "from tensorflow.keras.preprocessing import image\n",
    "from keras.utils.np_utils import to_categorical"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5f2bab06",
   "metadata": {},
   "source": [
    "## Reading images dataset "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "d4ed8773",
   "metadata": {},
   "outputs": [],
   "source": [
    "## reading path of the images and put it in DataFrame with their class\n",
    "\n",
    "folders=['beauty','family','fashion','fitness','food']\n",
    "\n",
    "def df_fol():\n",
    "    df_all_images=pd.DataFrame()\n",
    "    df_images= pd.DataFrame()\n",
    "    for folder in folders:\n",
    "        list_images_path= []\n",
    "        for dirname, _, filenames in os.walk(f'Dataset/{folder}/'):\n",
    "            for filename in filenames:\n",
    "                list_images_path.append(os.path.join(dirname, filename))\n",
    "        df_images[\"Images_Path\"] = list_images_path\n",
    "        df_images[\"Class\"] = (f\"{folder}\")\n",
    "        df_all_images = pd.concat([df_all_images, df_images], ignore_index=True)\n",
    "\n",
    "    return df_all_images"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c28f2fd0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Images_Path</th>\n",
       "      <th>Class</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Dataset/family/atoddlerandatopknot.jpg</td>\n",
       "      <td>family</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Dataset/fitness/bjrens.jpg</td>\n",
       "      <td>fitness</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Dataset/fitness/annaturkington.jpg</td>\n",
       "      <td>fitness</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Dataset/fashion/holacuore.jpg</td>\n",
       "      <td>fashion</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Dataset/family/roseyhome.jpg</td>\n",
       "      <td>family</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3765</th>\n",
       "      <td>Dataset/fitness/carahellevang.jpg</td>\n",
       "      <td>fitness</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3766</th>\n",
       "      <td>Dataset/fashion/zahraxanne.jpg</td>\n",
       "      <td>fashion</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3767</th>\n",
       "      <td>Dataset/fashion/arelivanessa.jpg</td>\n",
       "      <td>fashion</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3768</th>\n",
       "      <td>Dataset/fitness/wildcatfit.jpg</td>\n",
       "      <td>fitness</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3769</th>\n",
       "      <td>Dataset/family/ester_depret.jpg</td>\n",
       "      <td>family</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3770 rows Ã— 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                 Images_Path    Class\n",
       "0     Dataset/family/atoddlerandatopknot.jpg   family\n",
       "1                 Dataset/fitness/bjrens.jpg  fitness\n",
       "2         Dataset/fitness/annaturkington.jpg  fitness\n",
       "3              Dataset/fashion/holacuore.jpg  fashion\n",
       "4               Dataset/family/roseyhome.jpg   family\n",
       "...                                      ...      ...\n",
       "3765       Dataset/fitness/carahellevang.jpg  fitness\n",
       "3766          Dataset/fashion/zahraxanne.jpg  fashion\n",
       "3767        Dataset/fashion/arelivanessa.jpg  fashion\n",
       "3768          Dataset/fitness/wildcatfit.jpg  fitness\n",
       "3769         Dataset/family/ester_depret.jpg   family\n",
       "\n",
       "[3770 rows x 2 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# put a name for the dataframe and shuffle it\n",
    "\n",
    "df=df_fol().sample(frac=1).reset_index(drop=True)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "b433be11",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 1080x1440 with 6 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "## show an examples of the images\n",
    "\n",
    "import random\n",
    "import matplotlib.image as mpimg\n",
    "\n",
    "\n",
    "plt.figure(figsize=(15, 20))\n",
    "ran_num = []\n",
    "for i in range(0,6):\n",
    "    n = random.randint(0,len(df['Images_Path']))\n",
    "    ran_num.append(n)\n",
    "for i in range(6):\n",
    "    ax= plt.subplot(3, 3, i + 1)\n",
    "    plt.imshow(mpimg.imread(df['Images_Path'][ran_num[i]]))\n",
    "    plt.title(df['Class'][ran_num[i]])\n",
    "    plt.axis(\"off\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "02120724",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Distribution the images in the categories ')"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "## distribution the images in the categories\n",
    "\n",
    "df_new=((df.groupby(['Class']).agg(['count'])/3770)*100)\n",
    "df_new.plot(kind='pie', subplots=True, shadow = True,startangle=90,figsize=(10,10),cmap=\"RdBu\",autopct='%1.0f%%')\n",
    "plt.ylabel(\"percentage\",fontsize=15)\n",
    "plt.title(\"Distribution the images in the categories \")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9a4a2d1f",
   "metadata": {},
   "source": [
    "## Prepare images and labels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "eb8b48e2",
   "metadata": {},
   "outputs": [],
   "source": [
    "## load the images and convert it to numbers of daimantion\n",
    "\n",
    "images = []\n",
    "for img_path in df['Images_Path']:\n",
    "    img = image.load_img(img_path, target_size=(200, 150))# target_size it a diff if i put number from my mind\n",
    "    x = image.img_to_array(img)\n",
    "    images.append(x)\n",
    "    \n",
    "## conver the images to array and reference it to 'X'   \n",
    "X = np.array(images, dtype=\"float\")/255"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "184a319d",
   "metadata": {},
   "outputs": [],
   "source": [
    "## convert the labels to numericals class and reference it to 'Y'  \n",
    "\n",
    "labels = [int(df['Class'][w].replace('beauty', \"0\").replace(\"family\",'1').replace('fashion', \"0\").replace(\"fitness\",'3').replace('food', \"4\")) for w in range(len(df['Class']))]\n",
    "#Y = to_categorical(labels, num_classes = 5)\n",
    "y = np.array(labels)# for logestic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b9109ceb",
   "metadata": {},
   "outputs": [],
   "source": [
    "pip install mxnet"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3697c740",
   "metadata": {},
   "outputs": [],
   "source": [
    "from matplotlib.pyplot import imshow\n",
    "import mxnet as mx  \n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6c8ee7cf",
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_mx_array(array):\n",
    "    assert array.shape[2] == 3, \n",
    "    imshow((array.clip(0, 255)/255).asnumpy())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "04a62828",
   "metadata": {},
   "outputs": [],
   "source": [
    "def plot_mx_array1(array):\n",
    "    assert array.shape[2] == 3, \n",
    "    imshow((array.clip(0, 255).asnumpy()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "09747af5",
   "metadata": {},
   "outputs": [],
   "source": [
    "example_image = mx.image.imread(\"Dataset/beauty/theblondemann.jpg\")\n",
    "example_image.dtype == np.uint8\n",
    "example_image = example_image.astype(\"float32\")    \n",
    "plot_mx_array(example_image)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ef4ef3a9",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "#imshow((example_image.clip(0, 255)/255).asnumpy())\n",
    "imshow(mx.image.imread(\"Dataset/beauty/theblondemann.jpg\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4c227c20",
   "metadata": {},
   "outputs": [],
   "source": [
    "example_image_copy = example_image.copy()\n",
    "aug = mx.image.RandomGrayAug(p=1)\n",
    "aug_image = aug(example_image_copy)\n",
    "plot_mx_array(aug_image)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1a5ead0d",
   "metadata": {},
   "outputs": [],
   "source": [
    "1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4484e2ea",
   "metadata": {},
   "outputs": [],
   "source": [
    "example_image = mx.image.imread(\"Dataset/beauty/theblondemann.jpg\")\n",
    "example_image.dtype == np.uint8\n",
    "example_image = example_image.astype(\"float32\")    \n",
    "plot_mx_array1(example_image)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "63911034",
   "metadata": {},
   "outputs": [],
   "source": [
    "## put x and y in pickles\n",
    "'''\n",
    "open_file = open(\"X.txt\", \"wb\")\n",
    "pickle.dump(X, open_file)\n",
    "open_file.close()\n",
    "\n",
    "\n",
    "\n",
    "open_file = open(\"Y.txt\", \"wb\")\n",
    "pickle.dump(Y, open_file)\n",
    "open_file.close()\n",
    "'''"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b8e242b",
   "metadata": {},
   "source": [
    "## Split  Dataset into train, val, test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "2ee099d6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(3770, 200, 150, 3)\n",
      "(3770,)\n"
     ]
    }
   ],
   "source": [
    "## chake the shape of x and y\n",
    "\n",
    "print(X.shape)\n",
    "print(y.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "abb514cd",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = .1, random_state = 42)\n",
    "X_train, X_val, y_train, y_val = train_test_split(X_train, y_train, test_size = .1, random_state = 42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "1a2e7e2f",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_train_cat=to_categorical(y_train, num_classes = 5)\n",
    "y_val_cat=to_categorical(y_val, num_classes = 5)\n",
    "y_test_cat=to_categorical(y_test, num_classes = 5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0670fc8e",
   "metadata": {},
   "source": [
    "## Generate Data "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "44f64a49",
   "metadata": {},
   "outputs": [],
   "source": [
    "from keras.preprocessing.image import ImageDataGenerator\n",
    "\n",
    "\n",
    "train_datagen = ImageDataGenerator(  width_shift_range=[-200,200] ## Shifting\n",
    "                                    ,horizontal_flip=True, vertical_flip=True ## Flipping\n",
    "                                    ,rotation_range=90, fill_mode='nearest' ## Rotation\n",
    "                                    ,zoom_range=0.2)\n",
    "\n",
    "\n",
    "datagen = ImageDataGenerator()\n",
    "\n",
    "\n",
    "train_generator = train_datagen.flow(X_train,y_train_cat)\n",
    "\n",
    "val_generator = datagen.flow(X_val,y_val_cat)\n",
    "\n",
    "test_generator = datagen.flow(X_test,y_test_cat)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1c1b8a6d",
   "metadata": {},
   "source": [
    "### Evaluation function"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "f4c56229",
   "metadata": {},
   "outputs": [],
   "source": [
    "# build funcation for evaluation \n",
    "from sklearn.metrics import accuracy_score\n",
    "\n",
    "def get_accuracy(X):\n",
    "    predict_tr = X.predict(X_train)\n",
    "    classes_tr = np.argmax(predict_tr, axis=1)\n",
    "    predict_val = X.predict(X_val)\n",
    "    classes_val = np.argmax(predict_val, axis=1)\n",
    "\n",
    "    print(f'Training: {accuracy_score(y_train, classes_tr)}')\n",
    "    print(f'Val: {accuracy_score(y_val, classes_val)}')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3cbc98d1",
   "metadata": {},
   "source": [
    "# Models"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "67873f70",
   "metadata": {},
   "source": [
    "### Model 1: Baseline Logistic Regression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "9c7e5684",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(3053, 200, 150, 3)\n",
      "(340, 200, 150, 3)\n",
      "(377, 200, 150, 3)\n"
     ]
    }
   ],
   "source": [
    "## chake the shape of x and y\n",
    "\n",
    "print(X_train.shape)\n",
    "print(X_val.shape)\n",
    "print(X_test.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "a4ae1845",
   "metadata": {},
   "outputs": [],
   "source": [
    "## Reshape x\n",
    "X_train_re= X_train.reshape(3053, 200*150*3)\n",
    "X_val_re= X_val.reshape(340, 200*150*3)\n",
    "X_test_re= X_test.reshape(377, 200*150*3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "6b016d85",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LogisticRegression(C=1e-06, multi_class='multinomial')"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.metrics import accuracy_score\n",
    "\n",
    "#[100,10,0.1,0.001,0.00001]\n",
    "LR = LogisticRegression(C=0.000001,multi_class = 'multinomial', solver = 'lbfgs')\n",
    "LR.fit(X_train_re,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "cd170823",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The accuracy for training :  0.4081231575499509\n",
      "The accuracy for validation:  0.43823529411764706\n"
     ]
    }
   ],
   "source": [
    "print('The accuracy for training : ',LR.score(X_train_re,y_train))\n",
    "print('The accuracy for validation: ',LR.score(X_val_re,y_val))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "d12184a2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.6631299734748011"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accuracy_score(y_test, (LR.predict(X_test_re)))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6067c948",
   "metadata": {},
   "source": [
    "### Model 2:  Neural Network Models"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "1379cb5e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import keras\n",
    "from tensorflow import keras\n",
    "from keras.models import Sequential\n",
    "from tensorflow.keras import regularizers\n",
    "from tensorflow.keras.callbacks import EarlyStopping\n",
    "from keras.layers import Dense,Conv2D, MaxPooling2D, Flatten, InputLayer,Activation ,Dropout,BatchNormalization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "2e21994c",
   "metadata": {},
   "outputs": [],
   "source": [
    "early_stopping = EarlyStopping( monitor='val_loss',\n",
    "                                patience=1, \n",
    "                                mode='min')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 202,
   "id": "4971b9d1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_54\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " dense_130 (Dense)           (None, 200, 150, 25)      100       \n",
      "                                                                 \n",
      " flatten_56 (Flatten)        (None, 750000)            0         \n",
      "                                                                 \n",
      " dense_131 (Dense)           (None, 5)                 3750005   \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 3,750,105\n",
      "Trainable params: 3,750,105\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "## model 1\n",
    "\n",
    "#np.random.seed(1000)\n",
    "\n",
    "model_nn1= Sequential()\n",
    "\n",
    "model_nn1.add(InputLayer(input_shape=(200,150,3)))\n",
    "\n",
    "\n",
    "model_nn1.add(Dense(25,activation='tanh'))\n",
    "\n",
    "model_nn1.add(Flatten())\n",
    "model_nn1.add(Dense(5, activation = 'softmax'))  \n",
    "\n",
    "model_nn1.compile(  optimizer='adam',\n",
    "                    loss='categorical_crossentropy',\n",
    "                    metrics=['accuracy'])\n",
    "\n",
    "model_nn1.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 203,
   "id": "c99245ca",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/30\n",
      "96/96 [==============================] - 25s 205ms/step - loss: 16.1122 - accuracy: 0.5798 - val_loss: 3.9891 - val_accuracy: 0.6176\n",
      "Epoch 2/30\n",
      "96/96 [==============================] - 16s 166ms/step - loss: 1.6263 - accuracy: 0.8025 - val_loss: 1.4874 - val_accuracy: 0.8206\n",
      "Epoch 3/30\n",
      "96/96 [==============================] - 16s 166ms/step - loss: 1.5366 - accuracy: 0.8257 - val_loss: 1.7223 - val_accuracy: 0.8088\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x7f9896798f10>"
      ]
     },
     "execution_count": 203,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_nn1.fit(    X_train,y_train_cat,\n",
    "                  validation_data=(X_val, y_val_cat),\n",
    "                  epochs=30,\n",
    "                  batch_size=32,\n",
    "                  callbacks=early_stopping)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 204,
   "id": "f14b3ffb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training: 0.9256469046839174\n",
      "Val: 0.8088235294117647\n"
     ]
    }
   ],
   "source": [
    "get_accuracy(model_nn1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "154314eb",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<PIL.Image.Image image mode=RGB size=150x200 at 0x7F9C3BD20670>"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "img1=image.load_img(f'Dataset/IMG_0411.PNG',target_size=(200,150))\n",
    "img1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "67edd75a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "food\n"
     ]
    }
   ],
   "source": [
    "Z = image.img_to_array(img1)\n",
    "Z = np.expand_dims(Z,axis=0)\n",
    "images = np.vstack([Z])\n",
    "val= model_nn1.predict([images])\n",
    "ind=max(val).argmax()\n",
    "print(folders[ind])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 205,
   "id": "7f8249b6",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/yp/mrrrdhms149_ntzbn52gyyx00000gr/T/ipykernel_86072/1853296547.py:1: UserWarning: `Model.fit_generator` is deprecated and will be removed in a future version. Please use `Model.fit`, which supports generators.\n",
      "  model_nn1.fit_generator(    train_generator,\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/30\n",
      "96/96 [==============================] - 76s 765ms/step - loss: 17.0974 - accuracy: 0.2764 - val_loss: 1.7247 - val_accuracy: 0.7235\n",
      "Epoch 2/30\n",
      "96/96 [==============================] - 45s 465ms/step - loss: 2.4654 - accuracy: 0.2958 - val_loss: 1.5840 - val_accuracy: 0.7706\n",
      "Epoch 3/30\n",
      "96/96 [==============================] - 40s 416ms/step - loss: 1.8806 - accuracy: 0.3377 - val_loss: 1.4512 - val_accuracy: 0.7412\n",
      "Epoch 4/30\n",
      "96/96 [==============================] - 42s 436ms/step - loss: 1.9219 - accuracy: 0.3226 - val_loss: 1.4653 - val_accuracy: 0.7353\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x7f9895f8c3a0>"
      ]
     },
     "execution_count": 205,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_nn1.fit_generator(    train_generator,\n",
    "                            epochs=30, \n",
    "                            validation_data=val_generator,\n",
    "                            callbacks=early_stopping)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 206,
   "id": "b7417fd4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training: 0.813953488372093\n",
      "Val: 0.7352941176470589\n"
     ]
    }
   ],
   "source": [
    "get_accuracy(model_nn1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 215,
   "id": "dcee09a5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_57\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " dense_138 (Dense)           (None, 200, 150, 125)     500       \n",
      "                                                                 \n",
      " dropout_33 (Dropout)        (None, 200, 150, 125)     0         \n",
      "                                                                 \n",
      " dense_139 (Dense)           (None, 200, 150, 25)      3150      \n",
      "                                                                 \n",
      " dropout_34 (Dropout)        (None, 200, 150, 25)      0         \n",
      "                                                                 \n",
      " flatten_59 (Flatten)        (None, 750000)            0         \n",
      "                                                                 \n",
      " dense_140 (Dense)           (None, 5)                 3750005   \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 3,753,655\n",
      "Trainable params: 3,753,655\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/meshael/.local/lib/python3.9/site-packages/keras/optimizer_v2/adam.py:105: UserWarning: The `lr` argument is deprecated, use `learning_rate` instead.\n",
      "  super(Adam, self).__init__(name, **kwargs)\n"
     ]
    }
   ],
   "source": [
    "## model 2 \n",
    "model_nn2 = Sequential()\n",
    "\n",
    "\n",
    "model_nn2.add(InputLayer(input_shape=(200,150,3)))\n",
    "\n",
    "#model_nn2.add(Dense(200,activation='tanh'))   \n",
    "\n",
    "#model_nn2.add(Dense(150,activation='tanh')) \n",
    "\n",
    "#model_nn2.add(Dense(100,activation='tanh')) \n",
    "\n",
    "#model_nn2.add(Dense(75,activation='tanh'))   \n",
    "#,kernel_regularizer = regularizers.l2(0.015),activity_regularizer=regularizers.l1(0.015)\n",
    "#dropout=[0.05]\n",
    "model_nn2.add(Dense(125,activation='tanh')) \n",
    "model_nn2.add(Dropout(rate=.5))\n",
    "\n",
    "model_nn2.add(Dense(25,activation='tanh'))   \n",
    "model_nn2.add(Dropout(rate=.5))\n",
    "\n",
    "model_nn2.add(Flatten())\n",
    "model_nn2.add(Dense(5, activation = 'softmax'))  \n",
    "\n",
    "#lr=[0,]\n",
    "model_nn2.compile(  keras.optimizers.Adam(lr=0.001),\n",
    "                    loss=\"categorical_crossentropy\", \n",
    "                    metrics=['accuracy'])\n",
    "\n",
    "model_nn2.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 216,
   "id": "f1f503ca",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/30\n",
      "96/96 [==============================] - 371s 4s/step - loss: 3.7825 - accuracy: 0.5837 - val_loss: 0.6635 - val_accuracy: 0.7853\n",
      "Epoch 2/30\n",
      "96/96 [==============================] - 354s 4s/step - loss: 0.8313 - accuracy: 0.7511 - val_loss: 0.6583 - val_accuracy: 0.8324\n",
      "Epoch 3/30\n",
      "96/96 [==============================] - 354s 4s/step - loss: 0.7774 - accuracy: 0.7972 - val_loss: 0.5745 - val_accuracy: 0.8500\n",
      "Epoch 4/30\n",
      "96/96 [==============================] - 282s 3s/step - loss: 0.6403 - accuracy: 0.8402 - val_loss: 0.6703 - val_accuracy: 0.8294\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x7f98198d3160>"
      ]
     },
     "execution_count": 216,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_nn2.fit(    X_train,y_train_cat,\n",
    "                  validation_data=(X_val, y_val_cat),\n",
    "                  epochs=30,\n",
    "                  callbacks=early_stopping)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 212,
   "id": "6f6338a1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training: 0.9990173599737963\n",
      "Val: 0.8147058823529412\n"
     ]
    }
   ],
   "source": [
    "get_accuracy(model_nn2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 213,
   "id": "4c1e9232",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/yp/mrrrdhms149_ntzbn52gyyx00000gr/T/ipykernel_86072/1438831522.py:1: UserWarning: `Model.fit_generator` is deprecated and will be removed in a future version. Please use `Model.fit`, which supports generators.\n",
      "  model_nn2.fit_generator(    train_generator,\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/30\n",
      "96/96 [==============================] - 205s 2s/step - loss: 3.2164 - accuracy: 0.2941 - val_loss: 0.8838 - val_accuracy: 0.6794\n",
      "Epoch 2/30\n",
      "96/96 [==============================] - 185s 2s/step - loss: 1.7204 - accuracy: 0.3033 - val_loss: 0.9712 - val_accuracy: 0.6176\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x7f988a0ea7f0>"
      ]
     },
     "execution_count": 213,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_nn2.fit_generator(    train_generator,\n",
    "                            epochs=30, \n",
    "                            validation_data=val_generator,\n",
    "                            callbacks=early_stopping)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 214,
   "id": "da74d490",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training: 0.7982312479528333\n",
      "Val: 0.6176470588235294\n"
     ]
    }
   ],
   "source": [
    "get_accuracy(model_nn2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 193,
   "id": "90154636",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_50\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " dense_116 (Dense)           (None, 200, 150, 100)     400       \n",
      "                                                                 \n",
      " dropout_23 (Dropout)        (None, 200, 150, 100)     0         \n",
      "                                                                 \n",
      " dense_117 (Dense)           (None, 200, 150, 50)      5050      \n",
      "                                                                 \n",
      " dropout_24 (Dropout)        (None, 200, 150, 50)      0         \n",
      "                                                                 \n",
      " dense_118 (Dense)           (None, 200, 150, 25)      1275      \n",
      "                                                                 \n",
      " flatten_52 (Flatten)        (None, 750000)            0         \n",
      "                                                                 \n",
      " dense_119 (Dense)           (None, 5)                 3750005   \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 3,756,730\n",
      "Trainable params: 3,756,730\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/meshael/.local/lib/python3.9/site-packages/keras/optimizer_v2/adam.py:105: UserWarning: The `lr` argument is deprecated, use `learning_rate` instead.\n",
      "  super(Adam, self).__init__(name, **kwargs)\n"
     ]
    }
   ],
   "source": [
    "## model 3\n",
    "model_nn3 = Sequential()\n",
    "#6 hidden layer\n",
    "model_nn3.add(InputLayer(input_shape=(200,150,3)))\n",
    "\n",
    "#model_nn3.add(Dense(200,activation='relu'))   \n",
    "#model_nn3.add(Dense(150,activation='relu')) \n",
    "#model_nn3.add(Dense(100,activation='relu')) \n",
    "\n",
    "\n",
    "model_nn3.add(Dense(225,activation='relu'))\n",
    "model_nn3.add(Dropout(rate=.5))\n",
    "\n",
    "model_nn3.add(Dense(125,activation='relu'))\n",
    "model_nn3.add(Dropout(rate=.5))\n",
    "\n",
    "model_nn3.add(Dense(25,activation='relu')) \n",
    "\n",
    "\n",
    "model_nn3.add(Flatten())\n",
    "model_nn3.add(Dense(5 , activation = 'softmax'))  \n",
    "\n",
    "model_nn3.compile(  keras.optimizers.Adam(lr=0.001), \n",
    "                    loss=\"categorical_crossentropy\", \n",
    "                    metrics=['accuracy'])\n",
    "\n",
    "model_nn3.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 194,
   "id": "ea19a326",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/10\n",
      "96/96 [==============================] - 260s 3s/step - loss: 4.7874 - accuracy: 0.4825 - val_loss: 1.6065 - val_accuracy: 0.4235\n",
      "Epoch 2/10\n",
      "96/96 [==============================] - 388s 4s/step - loss: 0.6864 - accuracy: 0.7239 - val_loss: 0.7317 - val_accuracy: 0.8118\n",
      "Epoch 3/10\n",
      "96/96 [==============================] - 393s 4s/step - loss: 0.4446 - accuracy: 0.8297 - val_loss: 0.5579 - val_accuracy: 0.8353\n",
      "Epoch 4/10\n",
      "96/96 [==============================] - 277s 3s/step - loss: 0.2974 - accuracy: 0.8903 - val_loss: 0.6574 - val_accuracy: 0.7206\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x7f989f7d2610>"
      ]
     },
     "execution_count": 194,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_nn3.fit(    X_train,y_train_cat, \n",
    "                  validation_data=(X_val, y_val_cat),\n",
    "                  epochs=30,\n",
    "                  batch_size=32,\n",
    "                  callbacks=[early_stopping])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 195,
   "id": "34fb3833",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training: 0.8414674091057975\n",
      "Val: 0.7205882352941176\n"
     ]
    }
   ],
   "source": [
    "get_accuracy(model_nn3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 217,
   "id": "bdc531af",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_58\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " dense_141 (Dense)           (None, 200, 150, 100)     400       \n",
      "                                                                 \n",
      " dropout_35 (Dropout)        (None, 200, 150, 100)     0         \n",
      "                                                                 \n",
      " dense_142 (Dense)           (None, 200, 150, 50)      5050      \n",
      "                                                                 \n",
      " dropout_36 (Dropout)        (None, 200, 150, 50)      0         \n",
      "                                                                 \n",
      " dense_143 (Dense)           (None, 200, 150, 25)      1275      \n",
      "                                                                 \n",
      " dropout_37 (Dropout)        (None, 200, 150, 25)      0         \n",
      "                                                                 \n",
      " flatten_60 (Flatten)        (None, 750000)            0         \n",
      "                                                                 \n",
      " dense_144 (Dense)           (None, 5)                 3750005   \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 3,756,730\n",
      "Trainable params: 3,756,730\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "## model 4\n",
    "model_nn4 = Sequential()\n",
    "#6 hidden layer\n",
    "model_nn4.add(InputLayer(input_shape=(200,150,3)))\n",
    "\n",
    "#model_nn4.add(Dense(200,activation='relu'))   \n",
    "\n",
    "#model_nn4.add(Dense(150,activation='relu')) \n",
    "\n",
    "#model_nn4.add(Dense(100,activation='relu')) \n",
    "\n",
    "model_nn4.add(Dense(100,activation='tanh'))   \n",
    "model_nn4.add(Dropout(rate=.5))\n",
    "\n",
    "model_nn4.add(Dense(50,activation='tanh'))\n",
    "model_nn4.add(Dropout(rate=.5))\n",
    "\n",
    "model_nn4.add(Dense(25,activation='tanh')) \n",
    "model_nn4.add(Dropout(rate=.5))\n",
    "\n",
    "model_nn4.add(Flatten())\n",
    "model_nn4.add(Dense(5 , activation = 'softmax'))  \n",
    "\n",
    "model_nn4.compile(  optimizer='adam', \n",
    "                    loss=\"categorical_crossentropy\", \n",
    "                    metrics=['accuracy'])\n",
    "model_nn4.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 218,
   "id": "efc92e9c",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/30\n",
      "96/96 [==============================] - 313s 3s/step - loss: 4.4915 - accuracy: 0.5159 - val_loss: 0.6388 - val_accuracy: 0.8118\n",
      "Epoch 2/30\n",
      "15/96 [===>..........................] - ETA: 4:00 - loss: 1.5041 - accuracy: 0.6833"
     ]
    },
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "\u001b[0;32m/var/folders/yp/mrrrdhms149_ntzbn52gyyx00000gr/T/ipykernel_86072/2749910022.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m model_nn4.fit(  X_train,y_train_cat, \n\u001b[0m\u001b[1;32m      2\u001b[0m                 \u001b[0mvalidation_data\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_val\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_val_cat\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m                 \u001b[0mepochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m30\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m                 \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m32\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m                 callbacks=[early_stopping])\n",
      "\u001b[0;32m~/.local/lib/python3.9/site-packages/keras/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     62\u001b[0m     \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     63\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 64\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     65\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint: disable=broad-except\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     66\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/.local/lib/python3.9/site-packages/keras/engine/training.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing)\u001b[0m\n\u001b[1;32m   1214\u001b[0m                 _r=1):\n\u001b[1;32m   1215\u001b[0m               \u001b[0mcallbacks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mon_train_batch_begin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1216\u001b[0;31m               \u001b[0mtmp_logs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrain_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1217\u001b[0m               \u001b[0;32mif\u001b[0m \u001b[0mdata_handler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshould_sync\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1218\u001b[0m                 \u001b[0mcontext\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masync_wait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/.local/lib/python3.9/site-packages/tensorflow/python/util/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    148\u001b[0m     \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    149\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 150\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    151\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    152\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/.local/lib/python3.9/site-packages/tensorflow/python/eager/def_function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    908\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    909\u001b[0m       \u001b[0;32mwith\u001b[0m \u001b[0mOptionalXlaContext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jit_compile\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 910\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    911\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    912\u001b[0m       \u001b[0mnew_tracing_count\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental_get_tracing_count\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/.local/lib/python3.9/site-packages/tensorflow/python/eager/def_function.py\u001b[0m in \u001b[0;36m_call\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    940\u001b[0m       \u001b[0;31m# In this case we have created variables on the first call, so we run the\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    941\u001b[0m       \u001b[0;31m# defunned version which is guaranteed to never create variables.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 942\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_stateless_fn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# pylint: disable=not-callable\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    943\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_stateful_fn\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    944\u001b[0m       \u001b[0;31m# Release the lock early so that multiple threads can perform the call\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/.local/lib/python3.9/site-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   3128\u001b[0m       (graph_function,\n\u001b[1;32m   3129\u001b[0m        filtered_flat_args) = self._maybe_define_function(args, kwargs)\n\u001b[0;32m-> 3130\u001b[0;31m     return graph_function._call_flat(\n\u001b[0m\u001b[1;32m   3131\u001b[0m         filtered_flat_args, captured_inputs=graph_function.captured_inputs)  # pylint: disable=protected-access\n\u001b[1;32m   3132\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/.local/lib/python3.9/site-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m_call_flat\u001b[0;34m(self, args, captured_inputs, cancellation_manager)\u001b[0m\n\u001b[1;32m   1957\u001b[0m         and executing_eagerly):\n\u001b[1;32m   1958\u001b[0m       \u001b[0;31m# No tape is watching; skip to running the function.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1959\u001b[0;31m       return self._build_call_outputs(self._inference_function.call(\n\u001b[0m\u001b[1;32m   1960\u001b[0m           ctx, args, cancellation_manager=cancellation_manager))\n\u001b[1;32m   1961\u001b[0m     forward_backward = self._select_forward_and_backward_functions(\n",
      "\u001b[0;32m~/.local/lib/python3.9/site-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36mcall\u001b[0;34m(self, ctx, args, cancellation_manager)\u001b[0m\n\u001b[1;32m    596\u001b[0m       \u001b[0;32mwith\u001b[0m \u001b[0m_InterpolateFunctionError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    597\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mcancellation_manager\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 598\u001b[0;31m           outputs = execute.execute(\n\u001b[0m\u001b[1;32m    599\u001b[0m               \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msignature\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    600\u001b[0m               \u001b[0mnum_outputs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_num_outputs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/.local/lib/python3.9/site-packages/tensorflow/python/eager/execute.py\u001b[0m in \u001b[0;36mquick_execute\u001b[0;34m(op_name, num_outputs, inputs, attrs, ctx, name)\u001b[0m\n\u001b[1;32m     56\u001b[0m   \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     57\u001b[0m     \u001b[0mctx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mensure_initialized\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 58\u001b[0;31m     tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\n\u001b[0m\u001b[1;32m     59\u001b[0m                                         inputs, attrs, num_outputs)\n\u001b[1;32m     60\u001b[0m   \u001b[0;32mexcept\u001b[0m \u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_NotOkStatusException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
     ]
    }
   ],
   "source": [
    "model_nn4.fit(  X_train,y_train_cat, \n",
    "                validation_data=(X_val, y_val_cat),\n",
    "                epochs=30,\n",
    "                batch_size=32,\n",
    "                callbacks=[early_stopping])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 199,
   "id": "55c00e53",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training: 0.817884048476908\n",
      "Val: 0.7735294117647059\n"
     ]
    }
   ],
   "source": [
    "get_accuracy(model_nn4)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6afd4bc0",
   "metadata": {},
   "source": [
    "## Model 3: Convolutional Neural Networks ( CNN )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "3f4062c4",
   "metadata": {},
   "outputs": [],
   "source": [
    "import keras\n",
    "from keras.models import Sequential\n",
    "from tensorflow.keras.callbacks import EarlyStopping\n",
    "from keras.layers import Dense,Conv2D, MaxPooling2D, Flatten, InputLayer,Activation ,Dropout,BatchNormalization, GlobalAveragePooling2D"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 219,
   "id": "6b060805",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_59\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " conv2d_4 (Conv2D)           (None, 200, 150, 5)       140       \n",
      "                                                                 \n",
      " max_pooling2d (MaxPooling2D  (None, 100, 75, 5)       0         \n",
      " )                                                               \n",
      "                                                                 \n",
      " conv2d_5 (Conv2D)           (None, 100, 75, 10)       460       \n",
      "                                                                 \n",
      " max_pooling2d_1 (MaxPooling  (None, 50, 37, 10)       0         \n",
      " 2D)                                                             \n",
      "                                                                 \n",
      " conv2d_6 (Conv2D)           (None, 50, 37, 15)        1365      \n",
      "                                                                 \n",
      " global_average_pooling2d (G  (None, 15)               0         \n",
      " lobalAveragePooling2D)                                          \n",
      "                                                                 \n",
      " flatten_61 (Flatten)        (None, 15)                0         \n",
      "                                                                 \n",
      " dense_145 (Dense)           (None, 125)               2000      \n",
      "                                                                 \n",
      " dropout_38 (Dropout)        (None, 125)               0         \n",
      "                                                                 \n",
      " dense_146 (Dense)           (None, 25)                3150      \n",
      "                                                                 \n",
      " dropout_39 (Dropout)        (None, 25)                0         \n",
      "                                                                 \n",
      " dense_147 (Dense)           (None, 5)                 130       \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 7,245\n",
      "Trainable params: 7,245\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "## try 1\n",
    "\n",
    "import keras\n",
    "from tensorflow import keras\n",
    "from keras.models import Sequential\n",
    "from keras.layers import Dense, Conv2D, MaxPooling2D, Flatten, GlobalAveragePooling2D, InputLayer\n",
    "\n",
    "\n",
    "model_cnn1 = Sequential()\n",
    "\n",
    "model_cnn1.add(InputLayer(input_shape=(200,150,3)))\n",
    "\n",
    "model_cnn1.add(Conv2D(filters=5, kernel_size=3, activation='tanh', padding='same'))\n",
    "model_cnn1.add(MaxPooling2D())\n",
    "\n",
    "model_cnn1.add(Conv2D(filters=10, kernel_size=3, activation='tanh', padding='same'))\n",
    "model_cnn1.add(MaxPooling2D())\n",
    "\n",
    "model_cnn1.add(Conv2D(filters=15, kernel_size=3, activation='tanh', padding='same'))\n",
    "\n",
    "model_cnn1.add(GlobalAveragePooling2D())\n",
    "model_cnn1.add(Flatten())\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "model_cnn1.add(Dense(125, activation='tanh'))\n",
    "model_cnn1.add(Dropout(rate=.5, seed=123))\n",
    "\n",
    "model_cnn1.add(Dense(25, activation='tanh'))\n",
    "model_cnn1.add(Dropout(rate=.5, seed=123))\n",
    "\n",
    "model_cnn1.add(Dense(5, activation='softmax'))  \n",
    "\n",
    "model_cnn1.compile( keras.optimizers.Adam(lr=0.001),\n",
    "                    loss='categorical_crossentropy',\n",
    "                    metrics=['accuracy'])\n",
    "\n",
    "\n",
    "model_cnn1.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 220,
   "id": "ffc30978",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/30\n",
      "96/96 [==============================] - 41s 389ms/step - loss: 1.4359 - accuracy: 0.3632 - val_loss: 1.2491 - val_accuracy: 0.5000\n",
      "Epoch 2/30\n",
      "96/96 [==============================] - 28s 296ms/step - loss: 1.2209 - accuracy: 0.4805 - val_loss: 1.1474 - val_accuracy: 0.5235\n",
      "Epoch 3/30\n",
      "96/96 [==============================] - 28s 296ms/step - loss: 1.1475 - accuracy: 0.4975 - val_loss: 1.0538 - val_accuracy: 0.5618\n",
      "Epoch 4/30\n",
      "96/96 [==============================] - 28s 296ms/step - loss: 1.1024 - accuracy: 0.5165 - val_loss: 1.0191 - val_accuracy: 0.5735\n",
      "Epoch 5/30\n",
      "96/96 [==============================] - 29s 300ms/step - loss: 1.0369 - accuracy: 0.5375 - val_loss: 0.9855 - val_accuracy: 0.5765\n",
      "Epoch 6/30\n",
      "96/96 [==============================] - 28s 295ms/step - loss: 1.0065 - accuracy: 0.5427 - val_loss: 0.9955 - val_accuracy: 0.5735\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x7f981ea730d0>"
      ]
     },
     "execution_count": 220,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_cnn1.fit(  X_train, y_train_cat,  \n",
    "                 validation_data=(X_val, y_val_cat),\n",
    "                 epochs=30,\n",
    "                 batch_size=32,\n",
    "                 callbacks=early_stopping) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 221,
   "id": "da262047",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training: 0.5558467081559122\n",
      "Val: 0.5735294117647058\n"
     ]
    }
   ],
   "source": [
    "get_accuracy(model_cnn1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 222,
   "id": "e151f8c9",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/30\n",
      "96/96 [==============================] - 75s 767ms/step - loss: 1.5778 - accuracy: 0.3587 - val_loss: 1.6322 - val_accuracy: 0.1941\n",
      "Epoch 2/30\n",
      "96/96 [==============================] - 58s 603ms/step - loss: 1.3633 - accuracy: 0.3973 - val_loss: 1.4513 - val_accuracy: 0.2059\n",
      "Epoch 3/30\n",
      "96/96 [==============================] - 45s 463ms/step - loss: 1.3560 - accuracy: 0.3904 - val_loss: 1.5083 - val_accuracy: 0.1941\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x7f9820a6c340>"
      ]
     },
     "execution_count": 222,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_cnn1.fit(  train_generator,\n",
    "                 validation_data=(val_generator),\n",
    "                 epochs=30,\n",
    "                 batch_size=32,\n",
    "                 callbacks=early_stopping)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 223,
   "id": "be5df2f0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training: 0.21781853914182772\n",
      "Val: 0.19411764705882353\n"
     ]
    }
   ],
   "source": [
    "get_accuracy(model_cnn1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 224,
   "id": "162ec93e",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_60\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " conv2d_7 (Conv2D)           (None, 200, 150, 5)       140       \n",
      "                                                                 \n",
      " max_pooling2d_2 (MaxPooling  (None, 100, 75, 5)       0         \n",
      " 2D)                                                             \n",
      "                                                                 \n",
      " conv2d_8 (Conv2D)           (None, 100, 75, 10)       460       \n",
      "                                                                 \n",
      " max_pooling2d_3 (MaxPooling  (None, 50, 37, 10)       0         \n",
      " 2D)                                                             \n",
      "                                                                 \n",
      " conv2d_9 (Conv2D)           (None, 50, 37, 15)        1365      \n",
      "                                                                 \n",
      " global_average_pooling2d_1   (None, 15)               0         \n",
      " (GlobalAveragePooling2D)                                        \n",
      "                                                                 \n",
      " flatten_62 (Flatten)        (None, 15)                0         \n",
      "                                                                 \n",
      " dense_148 (Dense)           (None, 250)               4000      \n",
      "                                                                 \n",
      " dropout_40 (Dropout)        (None, 250)               0         \n",
      "                                                                 \n",
      " dense_149 (Dense)           (None, 125)               31375     \n",
      "                                                                 \n",
      " dropout_41 (Dropout)        (None, 125)               0         \n",
      "                                                                 \n",
      " dense_150 (Dense)           (None, 25)                3150      \n",
      "                                                                 \n",
      " dropout_42 (Dropout)        (None, 25)                0         \n",
      "                                                                 \n",
      " dense_151 (Dense)           (None, 5)                 130       \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 40,620\n",
      "Trainable params: 40,620\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/meshael/.local/lib/python3.9/site-packages/keras/optimizer_v2/adam.py:105: UserWarning: The `lr` argument is deprecated, use `learning_rate` instead.\n",
      "  super(Adam, self).__init__(name, **kwargs)\n"
     ]
    }
   ],
   "source": [
    "## try 2\n",
    "### paddinf 'same' & '3' hiddin layers & 3 con\n",
    "\n",
    "model_cnn2 = Sequential()\n",
    "\n",
    "model_cnn2.add(InputLayer(input_shape=(200,150,3)))\n",
    "\n",
    "model_cnn2.add(Conv2D(filters=5, kernel_size=3, activation='tanh', padding='same'))\n",
    "model_cnn2.add(MaxPooling2D())\n",
    "\n",
    "model_cnn2.add(Conv2D(filters=10, kernel_size=3, activation='tanh', padding='same'))\n",
    "model_cnn2.add(MaxPooling2D())\n",
    "\n",
    "model_cnn2.add(Conv2D(filters=15, kernel_size=3, activation='tanh', padding='same'))\n",
    "\n",
    "model_cnn2.add(GlobalAveragePooling2D())\n",
    "model_cnn2.add(Flatten())\n",
    "\n",
    "\n",
    "#model_cnn2.add(Dense(1000, activation='tanh'))\n",
    "#model_cnn2.add(Dense(500, activation='tanh'))\n",
    "\n",
    "model_cnn2.add(Dense(250, activation='tanh'))\n",
    "model_cnn2.add(Dropout(rate=.5, seed=123))\n",
    "\n",
    "model_cnn2.add(Dense(125, activation='tanh'))\n",
    "model_cnn2.add(Dropout(rate=.5, seed=123))\n",
    "\n",
    "model_cnn2.add(Dense(25, activation='tanh'))\n",
    "model_cnn2.add(Dropout(rate=.5, seed=123))\n",
    "\n",
    "model_cnn2.add(Dense(5, activation='softmax'))  \n",
    "\n",
    "model_cnn2.compile( keras.optimizers.Adam(lr=0.001),\n",
    "                    loss='categorical_crossentropy',\n",
    "                    metrics=['accuracy'])\n",
    "\n",
    "\n",
    "model_cnn2.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 225,
   "id": "35d6e676",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/30\n",
      "96/96 [==============================] - 30s 276ms/step - loss: 1.4355 - accuracy: 0.3341 - val_loss: 1.3167 - val_accuracy: 0.4324\n",
      "Epoch 2/30\n",
      "96/96 [==============================] - 25s 255ms/step - loss: 1.3525 - accuracy: 0.3937 - val_loss: 1.2746 - val_accuracy: 0.4176\n",
      "Epoch 3/30\n",
      "96/96 [==============================] - 25s 255ms/step - loss: 1.2269 - accuracy: 0.4651 - val_loss: 1.0852 - val_accuracy: 0.5147\n",
      "Epoch 4/30\n",
      "96/96 [==============================] - 24s 248ms/step - loss: 1.1411 - accuracy: 0.4894 - val_loss: 1.0473 - val_accuracy: 0.5471\n",
      "Epoch 5/30\n",
      "96/96 [==============================] - 24s 251ms/step - loss: 1.0788 - accuracy: 0.5198 - val_loss: 1.0171 - val_accuracy: 0.5559\n",
      "Epoch 6/30\n",
      "96/96 [==============================] - 24s 253ms/step - loss: 1.0687 - accuracy: 0.5205 - val_loss: 1.0634 - val_accuracy: 0.5353\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x7f98208296a0>"
      ]
     },
     "execution_count": 225,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_cnn2.fit( X_train, y_train_cat,  \n",
    "                validation_data=(X_val, y_val_cat),\n",
    "                epochs=30,\n",
    "                batch_size=32,\n",
    "                callbacks=early_stopping) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 226,
   "id": "c1b964a8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training: 0.5296429741238127\n",
      "Val: 0.5352941176470588\n"
     ]
    }
   ],
   "source": [
    "get_accuracy(model_cnn2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 227,
   "id": "3284081a",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/30\n",
      "96/96 [==============================] - 62s 624ms/step - loss: 1.4076 - accuracy: 0.3773 - val_loss: 1.2939 - val_accuracy: 0.3294\n",
      "Epoch 2/30\n",
      "96/96 [==============================] - 46s 479ms/step - loss: 1.3572 - accuracy: 0.3891 - val_loss: 1.2757 - val_accuracy: 0.4441\n",
      "Epoch 3/30\n",
      "96/96 [==============================] - 42s 437ms/step - loss: 1.3339 - accuracy: 0.4045 - val_loss: 1.2226 - val_accuracy: 0.5324\n",
      "Epoch 4/30\n",
      "96/96 [==============================] - 42s 434ms/step - loss: 1.3344 - accuracy: 0.3990 - val_loss: 1.3072 - val_accuracy: 0.3500\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x7f97e9ba76a0>"
      ]
     },
     "execution_count": 227,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_cnn2.fit(  train_generator,\n",
    "                 validation_data=(val_generator),\n",
    "                 epochs=30,\n",
    "                 batch_size=32,\n",
    "                 callbacks=early_stopping)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 228,
   "id": "085fe111",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training: 0.3576809695381592\n",
      "Val: 0.35\n"
     ]
    }
   ],
   "source": [
    "get_accuracy(model_cnn2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "ff7e75ab",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_11\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " conv2d_30 (Conv2D)          (None, 200, 150, 10)      280       \n",
      "                                                                 \n",
      " max_pooling2d_21 (MaxPoolin  (None, 100, 75, 10)      0         \n",
      " g2D)                                                            \n",
      "                                                                 \n",
      " conv2d_31 (Conv2D)          (None, 100, 75, 10)       910       \n",
      "                                                                 \n",
      " max_pooling2d_22 (MaxPoolin  (None, 50, 37, 10)       0         \n",
      " g2D)                                                            \n",
      "                                                                 \n",
      " conv2d_32 (Conv2D)          (None, 50, 37, 10)        910       \n",
      "                                                                 \n",
      " max_pooling2d_23 (MaxPoolin  (None, 25, 18, 10)       0         \n",
      " g2D)                                                            \n",
      "                                                                 \n",
      " global_average_pooling2d_11  (None, 10)               0         \n",
      "  (GlobalAveragePooling2D)                                       \n",
      "                                                                 \n",
      " flatten_11 (Flatten)        (None, 10)                0         \n",
      "                                                                 \n",
      " dense_37 (Dense)            (None, 125)               1375      \n",
      "                                                                 \n",
      " dropout_26 (Dropout)        (None, 125)               0         \n",
      "                                                                 \n",
      " dense_38 (Dense)            (None, 25)                3150      \n",
      "                                                                 \n",
      " dropout_27 (Dropout)        (None, 25)                0         \n",
      "                                                                 \n",
      " dense_39 (Dense)            (None, 5)                 130       \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 6,755\n",
      "Trainable params: 6,755\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/meshael/.local/lib/python3.9/site-packages/keras/optimizer_v2/adam.py:105: UserWarning: The `lr` argument is deprecated, use `learning_rate` instead.\n",
      "  super(Adam, self).__init__(name, **kwargs)\n"
     ]
    }
   ],
   "source": [
    "## try 3\n",
    "from tensorflow.keras import regularizers\n",
    "\n",
    "model_cnn3 = Sequential()\n",
    "\n",
    "model_cnn3.add(InputLayer(input_shape=(200,150,3)))\n",
    "\n",
    "model_cnn3.add(Conv2D(filters=10, kernel_size=3, activation='tanh', padding='same'))\n",
    "model_cnn3.add(MaxPooling2D())\n",
    "\n",
    "model_cnn3.add(Conv2D(filters=10, kernel_size=3, activation='tanh', padding='same'))\n",
    "model_cnn3.add(MaxPooling2D())\n",
    "\n",
    "model_cnn3.add(Conv2D(filters=10, kernel_size=3, activation='tanh', padding='same'))\n",
    "model_cnn3.add(MaxPooling2D())\n",
    "\n",
    "model_cnn3.add(GlobalAveragePooling2D())\n",
    "model_cnn3.add(Flatten())\n",
    "#activity_regularizer=regularizers.l1(0.5),bias_regularizer=regularizers.l1(0.5)\n",
    "\n",
    "#model_cnn3.add(Dense(1000, activation='tanh'))\n",
    "#model_cnn3.add(Dense(500, activation='tanh'))\n",
    "\n",
    "#model_cnn3.add(Dense(250, activation='tanh'))\n",
    "#model_cnn3.add(Dropout(rate=.05, seed=123))\n",
    "\n",
    "model_cnn3.add(Dense(125, activation='tanh'))\n",
    "model_cnn3.add(Dropout(rate=.05, seed=123))\n",
    "\n",
    "model_cnn3.add(Dense(25, activation='tanh'))\n",
    "model_cnn3.add(Dropout(rate=.05, seed=123))\n",
    "\n",
    "model_cnn3.add(Dense(5, activation='softmax'))  \n",
    "\n",
    "model_cnn3.compile( keras.optimizers.Adam(lr=0.001),\n",
    "                    loss='categorical_crossentropy',\n",
    "                    metrics=['accuracy'])\n",
    "\n",
    "\n",
    "model_cnn3.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "ab9369bd",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/30\n",
      "96/96 [==============================] - 33s 334ms/step - loss: 1.3576 - accuracy: 0.4160 - val_loss: 1.2728 - val_accuracy: 0.4324\n",
      "Epoch 2/30\n",
      "96/96 [==============================] - 30s 313ms/step - loss: 1.1465 - accuracy: 0.5047 - val_loss: 1.0706 - val_accuracy: 0.5000\n",
      "Epoch 3/30\n",
      "96/96 [==============================] - 31s 318ms/step - loss: 1.0499 - accuracy: 0.5362 - val_loss: 0.9936 - val_accuracy: 0.5324\n",
      "Epoch 4/30\n",
      "96/96 [==============================] - 30s 317ms/step - loss: 1.0125 - accuracy: 0.5421 - val_loss: 0.9388 - val_accuracy: 0.5353\n",
      "Epoch 5/30\n",
      "96/96 [==============================] - 30s 316ms/step - loss: 0.9333 - accuracy: 0.5716 - val_loss: 0.8714 - val_accuracy: 0.5618\n",
      "Epoch 6/30\n",
      "96/96 [==============================] - 31s 325ms/step - loss: 0.9047 - accuracy: 0.5778 - val_loss: 0.8948 - val_accuracy: 0.5588\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x7f87f9cb1c40>"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_cnn3.fit( X_train, y_train_cat,  \n",
    "                validation_data=(X_val, y_val_cat),\n",
    "                epochs=30,\n",
    "                batch_size=32,\n",
    "                callbacks=early_stopping) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "7bedf50a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training: 0.5853259089420242\n",
      "Val: 0.5588235294117647\n"
     ]
    }
   ],
   "source": [
    "get_accuracy(model_cnn3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "09605300",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/30\n",
      "96/96 [==============================] - 53s 542ms/step - loss: 1.4236 - accuracy: 0.4065 - val_loss: 1.5737 - val_accuracy: 0.2706\n",
      "Epoch 2/30\n",
      "96/96 [==============================] - 44s 460ms/step - loss: 1.3702 - accuracy: 0.3970 - val_loss: 1.3685 - val_accuracy: 0.3029\n",
      "Epoch 3/30\n",
      "96/96 [==============================] - 39s 404ms/step - loss: 1.3338 - accuracy: 0.4137 - val_loss: 1.3360 - val_accuracy: 0.3176\n",
      "Epoch 4/30\n",
      "96/96 [==============================] - 39s 405ms/step - loss: 1.3168 - accuracy: 0.4216 - val_loss: 1.2885 - val_accuracy: 0.3412\n",
      "Epoch 5/30\n",
      "96/96 [==============================] - 43s 447ms/step - loss: 1.3222 - accuracy: 0.4121 - val_loss: 1.2848 - val_accuracy: 0.3441\n",
      "Epoch 6/30\n",
      "96/96 [==============================] - 43s 445ms/step - loss: 1.3192 - accuracy: 0.4176 - val_loss: 1.2685 - val_accuracy: 0.3618\n",
      "Epoch 7/30\n",
      "96/96 [==============================] - 38s 399ms/step - loss: 1.3172 - accuracy: 0.4189 - val_loss: 1.2360 - val_accuracy: 0.4147\n",
      "Epoch 8/30\n",
      "96/96 [==============================] - 38s 399ms/step - loss: 1.3115 - accuracy: 0.4229 - val_loss: 1.2067 - val_accuracy: 0.4912\n",
      "Epoch 9/30\n",
      "96/96 [==============================] - 38s 397ms/step - loss: 1.3171 - accuracy: 0.4143 - val_loss: 1.2390 - val_accuracy: 0.4118\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x7f8d2706e3d0>"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_cnn3.fit(  train_generator,\n",
    "                 validation_data=(val_generator),\n",
    "                 epochs=30,\n",
    "                 batch_size=32,\n",
    "                 callbacks=early_stopping)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "0d51b393",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training: 0.4113986243039633\n",
      "Val: 0.4117647058823529\n"
     ]
    }
   ],
   "source": [
    "get_accuracy(model_cnn3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "c296f480",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_8\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " conv2d_21 (Conv2D)          (None, 198, 148, 10)      280       \n",
      "                                                                 \n",
      " max_pooling2d_15 (MaxPoolin  (None, 99, 74, 10)       0         \n",
      " g2D)                                                            \n",
      "                                                                 \n",
      " conv2d_22 (Conv2D)          (None, 97, 72, 10)        910       \n",
      "                                                                 \n",
      " max_pooling2d_16 (MaxPoolin  (None, 48, 36, 10)       0         \n",
      " g2D)                                                            \n",
      "                                                                 \n",
      " conv2d_23 (Conv2D)          (None, 46, 34, 10)        910       \n",
      "                                                                 \n",
      " global_average_pooling2d_8   (None, 10)               0         \n",
      " (GlobalAveragePooling2D)                                        \n",
      "                                                                 \n",
      " flatten_8 (Flatten)         (None, 10)                0         \n",
      "                                                                 \n",
      " dense_25 (Dense)            (None, 250)               2750      \n",
      "                                                                 \n",
      " dropout_17 (Dropout)        (None, 250)               0         \n",
      "                                                                 \n",
      " dense_26 (Dense)            (None, 125)               31375     \n",
      "                                                                 \n",
      " dropout_18 (Dropout)        (None, 125)               0         \n",
      "                                                                 \n",
      " dense_27 (Dense)            (None, 25)                3150      \n",
      "                                                                 \n",
      " dropout_19 (Dropout)        (None, 25)                0         \n",
      "                                                                 \n",
      " dense_28 (Dense)            (None, 5)                 130       \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 39,505\n",
      "Trainable params: 39,505\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "## try 4\n",
    "\n",
    "model_cnn4 = Sequential()\n",
    "\n",
    "model_cnn4.add(InputLayer(input_shape=(200,150,3)))\n",
    "\n",
    "model_cnn4.add(Conv2D(filters=10, kernel_size=3, activation='tanh', padding='valid'))\n",
    "model_cnn4.add(MaxPooling2D())\n",
    "\n",
    "model_cnn4.add(Conv2D(filters=10, kernel_size=3, activation='tanh', padding='valid'))\n",
    "model_cnn4.add(MaxPooling2D())\n",
    "\n",
    "model_cnn4.add(Conv2D(filters=10, kernel_size=3, activation='tanh', padding='valid'))\n",
    "\n",
    "model_cnn4.add(GlobalAveragePooling2D())\n",
    "model_cnn4.add(Flatten())\n",
    "\n",
    "\n",
    "#model_cnn4.add(Dense(1000, activation='tanh'))\n",
    "#model_cnn4.add(Dense(500, activation='tanh'))\n",
    "\n",
    "model_cnn4.add(Dense(250, activation='tanh'))\n",
    "model_cnn4.add(Dropout(rate=.05, seed=123))\n",
    "\n",
    "model_cnn4.add(Dense(125, activation='tanh'))\n",
    "model_cnn4.add(Dropout(rate=.05, seed=123))\n",
    "\n",
    "model_cnn4.add(Dense(25, activation='tanh'))\n",
    "model_cnn4.add(Dropout(rate=.05, seed=123))\n",
    "\n",
    "model_cnn4.add(Dense(5, activation='softmax'))  \n",
    "\n",
    "model_cnn4.compile( keras.optimizers.Adam(lr=0.001),\n",
    "                    loss='categorical_crossentropy',\n",
    "                    metrics=['accuracy'])\n",
    "\n",
    "\n",
    "model_cnn4.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "531821b9",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/30\n",
      "96/96 [==============================] - 33s 327ms/step - loss: 1.2112 - accuracy: 0.4782 - val_loss: 1.0787 - val_accuracy: 0.5118\n",
      "Epoch 2/30\n",
      "96/96 [==============================] - 29s 298ms/step - loss: 1.0582 - accuracy: 0.5418 - val_loss: 1.0042 - val_accuracy: 0.5147\n",
      "Epoch 3/30\n",
      "96/96 [==============================] - 31s 326ms/step - loss: 0.9787 - accuracy: 0.5689 - val_loss: 0.8975 - val_accuracy: 0.5618\n",
      "Epoch 4/30\n",
      "96/96 [==============================] - 28s 289ms/step - loss: 0.9209 - accuracy: 0.5837 - val_loss: 0.8612 - val_accuracy: 0.5912\n",
      "Epoch 5/30\n",
      "96/96 [==============================] - 28s 294ms/step - loss: 0.9090 - accuracy: 0.5830 - val_loss: 0.9010 - val_accuracy: 0.5412\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x7f89d86717f0>"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_cnn4.fit( X_train, y_train_cat,  \n",
    "                validation_data=(X_val, y_val_cat),\n",
    "                epochs=30,\n",
    "                batch_size=32,\n",
    "                callbacks=early_stopping) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "ac600193",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training: 0.5794300687848019\n",
      "Val: 0.5411764705882353\n"
     ]
    }
   ],
   "source": [
    "get_accuracy(model_cnn4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "787dc1a9",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_9\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " conv2d_24 (Conv2D)          (None, 200, 150, 20)      560       \n",
      "                                                                 \n",
      " max_pooling2d_17 (MaxPoolin  (None, 100, 75, 20)      0         \n",
      " g2D)                                                            \n",
      "                                                                 \n",
      " conv2d_25 (Conv2D)          (None, 100, 75, 20)       3620      \n",
      "                                                                 \n",
      " max_pooling2d_18 (MaxPoolin  (None, 50, 37, 20)       0         \n",
      " g2D)                                                            \n",
      "                                                                 \n",
      " conv2d_26 (Conv2D)          (None, 50, 37, 20)        3620      \n",
      "                                                                 \n",
      " global_average_pooling2d_9   (None, 20)               0         \n",
      " (GlobalAveragePooling2D)                                        \n",
      "                                                                 \n",
      " flatten_9 (Flatten)         (None, 20)                0         \n",
      "                                                                 \n",
      " dense_29 (Dense)            (None, 250)               5250      \n",
      "                                                                 \n",
      " dropout_20 (Dropout)        (None, 250)               0         \n",
      "                                                                 \n",
      " dense_30 (Dense)            (None, 125)               31375     \n",
      "                                                                 \n",
      " dropout_21 (Dropout)        (None, 125)               0         \n",
      "                                                                 \n",
      " dense_31 (Dense)            (None, 25)                3150      \n",
      "                                                                 \n",
      " dropout_22 (Dropout)        (None, 25)                0         \n",
      "                                                                 \n",
      " dense_32 (Dense)            (None, 5)                 130       \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 47,705\n",
      "Trainable params: 47,705\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/meshael/.local/lib/python3.9/site-packages/keras/optimizer_v2/adam.py:105: UserWarning: The `lr` argument is deprecated, use `learning_rate` instead.\n",
      "  super(Adam, self).__init__(name, **kwargs)\n"
     ]
    }
   ],
   "source": [
    "## try 5\n",
    "\n",
    "model_cnn5 = Sequential()\n",
    "\n",
    "model_cnn5.add(InputLayer(input_shape=(200,150,3)))\n",
    "\n",
    "model_cnn5.add(Conv2D(filters=20, kernel_size=3, activation='tanh', padding='same'))\n",
    "model_cnn5.add(MaxPooling2D())\n",
    "\n",
    "model_cnn5.add(Conv2D(filters=20, kernel_size=3, activation='tanh', padding='same'))\n",
    "model_cnn5.add(MaxPooling2D())\n",
    "\n",
    "model_cnn5.add(Conv2D(filters=20, kernel_size=3, activation='tanh', padding='same'))\n",
    "\n",
    "model_cnn5.add(GlobalAveragePooling2D())\n",
    "model_cnn5.add(Flatten())\n",
    "\n",
    "\n",
    "#model_cnn5.add(Dense(1000, activation='tanh'))\n",
    "#model_cnn5.add(Dense(500, activation='tanh'))\n",
    "\n",
    "model_cnn5.add(Dense(250, activation='tanh'))\n",
    "model_cnn5.add(Dropout(rate=.05, seed=123))\n",
    "\n",
    "model_cnn5.add(Dense(125, activation='tanh'))\n",
    "model_cnn5.add(Dropout(rate=.05, seed=123))\n",
    "\n",
    "model_cnn5.add(Dense(25, activation='tanh'))\n",
    "model_cnn5.add(Dropout(rate=.05, seed=123))\n",
    "\n",
    "model_cnn5.add(Dense(5, activation='softmax'))  \n",
    "\n",
    "model_cnn5.compile( keras.optimizers.Adam(lr=0.001),\n",
    "                    loss='categorical_crossentropy',\n",
    "                    metrics=['accuracy'])\n",
    "\n",
    "\n",
    "model_cnn5.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "8eccfb4a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/30\n",
      "96/96 [==============================] - 56s 568ms/step - loss: 1.2726 - accuracy: 0.4314 - val_loss: 1.1369 - val_accuracy: 0.4853\n",
      "Epoch 2/30\n",
      "96/96 [==============================] - 46s 477ms/step - loss: 1.0768 - accuracy: 0.5303 - val_loss: 1.3226 - val_accuracy: 0.4324\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x7f87f8b2bb50>"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_cnn5.fit(   X_train,y_train_cat, \n",
    "                  validation_data=(X_val, y_val_cat),\n",
    "                  epochs=30,\n",
    "                  batch_size=32,\n",
    "                  callbacks=early_stopping)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "65527eeb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training: 0.47756305273501476\n",
      "Val: 0.4323529411764706\n"
     ]
    }
   ],
   "source": [
    "get_accuracy(model_cnn5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "a10cdc1b",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_4\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " conv2d_9 (Conv2D)           (None, 198, 148, 20)      560       \n",
      "                                                                 \n",
      " max_pooling2d_7 (MaxPooling  (None, 99, 74, 20)       0         \n",
      " 2D)                                                             \n",
      "                                                                 \n",
      " conv2d_10 (Conv2D)          (None, 97, 72, 20)        3620      \n",
      "                                                                 \n",
      " max_pooling2d_8 (MaxPooling  (None, 48, 36, 20)       0         \n",
      " 2D)                                                             \n",
      "                                                                 \n",
      " conv2d_11 (Conv2D)          (None, 46, 34, 20)        3620      \n",
      "                                                                 \n",
      " global_average_pooling2d_4   (None, 20)               0         \n",
      " (GlobalAveragePooling2D)                                        \n",
      "                                                                 \n",
      " flatten_4 (Flatten)         (None, 20)                0         \n",
      "                                                                 \n",
      " dense_12 (Dense)            (None, 250)               5250      \n",
      "                                                                 \n",
      " dropout_8 (Dropout)         (None, 250)               0         \n",
      "                                                                 \n",
      " dense_13 (Dense)            (None, 125)               31375     \n",
      "                                                                 \n",
      " dropout_9 (Dropout)         (None, 125)               0         \n",
      "                                                                 \n",
      " dense_14 (Dense)            (None, 25)                3150      \n",
      "                                                                 \n",
      " dropout_10 (Dropout)        (None, 25)                0         \n",
      "                                                                 \n",
      " dense_15 (Dense)            (None, 5)                 130       \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 47,705\n",
      "Trainable params: 47,705\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "## try 6\n",
    "\n",
    "model_cnn6 = Sequential()\n",
    "\n",
    "model_cnn6.add(InputLayer(input_shape=(200,150,3)))\n",
    "\n",
    "model_cnn6.add(Conv2D(filters=20, kernel_size=3, activation='tanh', padding='valid'))\n",
    "model_cnn6.add(MaxPooling2D())\n",
    "\n",
    "model_cnn6.add(Conv2D(filters=20, kernel_size=3, activation='tanh', padding='valid'))\n",
    "model_cnn6.add(MaxPooling2D())\n",
    "\n",
    "model_cnn6.add(Conv2D(filters=20, kernel_size=3, activation='tanh', padding='valid'))\n",
    "\n",
    "model_cnn6.add(GlobalAveragePooling2D())\n",
    "model_cnn6.add(Flatten())\n",
    "\n",
    "\n",
    "#model_cnn6.add(Dense(1000, activation='tanh'))\n",
    "#model_cnn6.add(Dense(500, activation='tanh'))\n",
    "\n",
    "model_cnn6.add(Dense(250, activation='tanh'))\n",
    "model_cnn6.add(Dropout(rate=.05, seed=123))\n",
    "\n",
    "model_cnn6.add(Dense(125, activation='tanh'))\n",
    "model_cnn6.add(Dropout(rate=.05, seed=123))\n",
    "\n",
    "model_cnn6.add(Dense(25, activation='tanh'))\n",
    "model_cnn6.add(Dropout(rate=.05, seed=123))\n",
    "\n",
    "model_cnn6.add(Dense(5, activation='softmax'))  \n",
    "\n",
    "model_cnn6.compile( keras.optimizers.Adam(lr=0.001),\n",
    "                    loss='categorical_crossentropy',\n",
    "                    metrics=['accuracy'])\n",
    "\n",
    "\n",
    "model_cnn6.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "8f376568",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/30\n",
      "96/96 [==============================] - 47s 478ms/step - loss: 1.2458 - accuracy: 0.4622 - val_loss: 1.1313 - val_accuracy: 0.4912\n",
      "Epoch 2/30\n",
      "96/96 [==============================] - 44s 461ms/step - loss: 1.0746 - accuracy: 0.5267 - val_loss: 1.0625 - val_accuracy: 0.5206\n",
      "Epoch 3/30\n",
      "96/96 [==============================] - 45s 473ms/step - loss: 0.9569 - accuracy: 0.5601 - val_loss: 0.9462 - val_accuracy: 0.5265\n",
      "Epoch 4/30\n",
      "96/96 [==============================] - 45s 470ms/step - loss: 0.9707 - accuracy: 0.5565 - val_loss: 0.8964 - val_accuracy: 0.5559\n",
      "Epoch 5/30\n",
      "96/96 [==============================] - 52s 545ms/step - loss: 0.8910 - accuracy: 0.5915 - val_loss: 0.8750 - val_accuracy: 0.5618\n",
      "Epoch 6/30\n",
      "96/96 [==============================] - 50s 519ms/step - loss: 0.9049 - accuracy: 0.5870 - val_loss: 0.7932 - val_accuracy: 0.6441\n",
      "Epoch 7/30\n",
      "96/96 [==============================] - 44s 460ms/step - loss: 0.8618 - accuracy: 0.6069 - val_loss: 0.8053 - val_accuracy: 0.6235\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x7f89933cbee0>"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_cnn6.fit(   X_train,y_train_cat, \n",
    "                  validation_data=(X_val, y_val_cat),\n",
    "                  epochs=30,\n",
    "                  batch_size=32,\n",
    "                  callbacks=early_stopping)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "5ca8ddfc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training: 0.6311824434981985\n",
      "Val: 0.6235294117647059\n"
     ]
    }
   ],
   "source": [
    "get_accuracy(model_cnn6)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "65e8425f",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_15\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " conv2d_42 (Conv2D)          (None, 198, 148, 30)      840       \n",
      "                                                                 \n",
      " max_pooling2d_30 (MaxPoolin  (None, 99, 74, 30)       0         \n",
      " g2D)                                                            \n",
      "                                                                 \n",
      " conv2d_43 (Conv2D)          (None, 97, 72, 30)        8130      \n",
      "                                                                 \n",
      " max_pooling2d_31 (MaxPoolin  (None, 48, 36, 30)       0         \n",
      " g2D)                                                            \n",
      "                                                                 \n",
      " conv2d_44 (Conv2D)          (None, 46, 34, 30)        8130      \n",
      "                                                                 \n",
      " max_pooling2d_32 (MaxPoolin  (None, 23, 17, 30)       0         \n",
      " g2D)                                                            \n",
      "                                                                 \n",
      " global_average_pooling2d_15  (None, 30)               0         \n",
      "  (GlobalAveragePooling2D)                                       \n",
      "                                                                 \n",
      " flatten_15 (Flatten)        (None, 30)                0         \n",
      "                                                                 \n",
      " dense_54 (Dense)            (None, 500)               15500     \n",
      "                                                                 \n",
      " dropout_39 (Dropout)        (None, 500)               0         \n",
      "                                                                 \n",
      " dense_55 (Dense)            (None, 250)               125250    \n",
      "                                                                 \n",
      " dropout_40 (Dropout)        (None, 250)               0         \n",
      "                                                                 \n",
      " dense_56 (Dense)            (None, 125)               31375     \n",
      "                                                                 \n",
      " dropout_41 (Dropout)        (None, 125)               0         \n",
      "                                                                 \n",
      " dense_57 (Dense)            (None, 25)                3150      \n",
      "                                                                 \n",
      " dropout_42 (Dropout)        (None, 25)                0         \n",
      "                                                                 \n",
      " dense_58 (Dense)            (None, 5)                 130       \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 192,505\n",
      "Trainable params: 192,505\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/meshael/.local/lib/python3.9/site-packages/keras/optimizer_v2/adam.py:105: UserWarning: The `lr` argument is deprecated, use `learning_rate` instead.\n",
      "  super(Adam, self).__init__(name, **kwargs)\n"
     ]
    }
   ],
   "source": [
    "## try 7\n",
    "\n",
    "model_cnn7 = Sequential()\n",
    "\n",
    "model_cnn7.add(InputLayer(input_shape=(200,150,3)))\n",
    "\n",
    "model_cnn7.add(Conv2D(filters=30, kernel_size=3, activation='tanh', padding='valid'))\n",
    "model_cnn7.add(MaxPooling2D())\n",
    "\n",
    "model_cnn7.add(Conv2D(filters=30, kernel_size=3, activation='tanh', padding='valid'))\n",
    "model_cnn7.add(MaxPooling2D())\n",
    "\n",
    "model_cnn7.add(Conv2D(filters=30, kernel_size=3, activation='tanh', padding='valid'))\n",
    "model_cnn7.add(MaxPooling2D())\n",
    "\n",
    "model_cnn7.add(GlobalAveragePooling2D())\n",
    "model_cnn7.add(Flatten())\n",
    "\n",
    "\n",
    "#model_cnn7.add(Dense(1000, activation='tanh'))\n",
    "model_cnn7.add(Dense(500, activation='tanh'))\n",
    "model_cnn7.add(Dropout(rate=.5, seed=123))\n",
    "\n",
    "model_cnn7.add(Dense(250, activation='tanh'))\n",
    "model_cnn7.add(Dropout(rate=.5, seed=123))\n",
    "\n",
    "model_cnn7.add(Dense(125, activation='tanh'))\n",
    "model_cnn7.add(Dropout(rate=.5, seed=123))\n",
    "\n",
    "model_cnn7.add(Dense(25, activation='tanh'))\n",
    "model_cnn7.add(Dropout(rate=.5, seed=123))\n",
    "\n",
    "model_cnn7.add(Dense(5, activation='softmax'))  \n",
    "\n",
    "model_cnn7.compile( keras.optimizers.Adam(lr=0.001),\n",
    "                    loss='categorical_crossentropy',\n",
    "                    metrics=['accuracy'])\n",
    "\n",
    "\n",
    "model_cnn7.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "b1463b42",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/30\n",
      "96/96 [==============================] - 65s 662ms/step - loss: 1.4232 - accuracy: 0.3570 - val_loss: 1.2018 - val_accuracy: 0.4353\n",
      "Epoch 2/30\n",
      "96/96 [==============================] - 68s 714ms/step - loss: 1.1597 - accuracy: 0.5110 - val_loss: 0.9793 - val_accuracy: 0.6088\n",
      "Epoch 3/30\n",
      "96/96 [==============================] - 95s 987ms/step - loss: 1.0608 - accuracy: 0.5359 - val_loss: 0.8831 - val_accuracy: 0.5853\n",
      "Epoch 4/30\n",
      "96/96 [==============================] - 68s 710ms/step - loss: 0.9789 - accuracy: 0.5699 - val_loss: 0.8078 - val_accuracy: 0.6353\n",
      "Epoch 5/30\n",
      "96/96 [==============================] - 65s 672ms/step - loss: 0.8802 - accuracy: 0.6328 - val_loss: 0.6211 - val_accuracy: 0.7412\n",
      "Epoch 6/30\n",
      "96/96 [==============================] - 86s 896ms/step - loss: 0.8281 - accuracy: 0.6679 - val_loss: 0.6004 - val_accuracy: 0.7206\n",
      "Epoch 7/30\n",
      "96/96 [==============================] - 66s 685ms/step - loss: 0.7434 - accuracy: 0.7036 - val_loss: 0.5271 - val_accuracy: 0.8029\n",
      "Epoch 8/30\n",
      "96/96 [==============================] - 66s 689ms/step - loss: 0.7113 - accuracy: 0.7167 - val_loss: 0.5640 - val_accuracy: 0.7588\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x7f87ffba1790>"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_cnn7.fit(   X_train,y_train_cat, \n",
    "                  validation_data=(X_val, y_val_cat),\n",
    "                  epochs=30,\n",
    "                  batch_size=32,\n",
    "                  callbacks=early_stopping)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "57f7238a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training: 0.7703897805437275\n",
      "Val: 0.7588235294117647\n"
     ]
    }
   ],
   "source": [
    "get_accuracy(model_cnn7)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "9b31d9cb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<PIL.Image.Image image mode=RGB size=150x200 at 0x7F8769C67C70>"
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "img=image.load_img(f'Dataset/IMG_0423.PNG',target_size=(200,150))\n",
    "img"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "id": "3a5f70c3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "food\n"
     ]
    }
   ],
   "source": [
    "Z = image.img_to_array(img)\n",
    "Z = np.expand_dims((Z),axis=0)\n",
    "images = np.vstack([Z])\n",
    "val= model_cnn7.predict([images])\n",
    "ind=max(val).argmax()\n",
    "print(folders[ind])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "cbab3b61",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "food\n"
     ]
    }
   ],
   "source": [
    "Z = image.img_to_array(img1)\n",
    "Z = np.expand_dims(Z,axis=0)\n",
    "image= np.vstack([Z])\n",
    "val= model_cnn7.predict([image])\n",
    "ind=max(val).argmax()\n",
    "print(folders[ind])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "a11e758e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_18\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " conv2d_51 (Conv2D)          (None, 198, 148, 30)      840       \n",
      "                                                                 \n",
      " max_pooling2d_38 (MaxPoolin  (None, 99, 74, 30)       0         \n",
      " g2D)                                                            \n",
      "                                                                 \n",
      " conv2d_52 (Conv2D)          (None, 97, 72, 30)        8130      \n",
      "                                                                 \n",
      " max_pooling2d_39 (MaxPoolin  (None, 48, 36, 30)       0         \n",
      " g2D)                                                            \n",
      "                                                                 \n",
      " conv2d_53 (Conv2D)          (None, 46, 34, 30)        8130      \n",
      "                                                                 \n",
      " global_average_pooling2d_18  (None, 30)               0         \n",
      "  (GlobalAveragePooling2D)                                       \n",
      "                                                                 \n",
      " flatten_18 (Flatten)        (None, 30)                0         \n",
      "                                                                 \n",
      " dense_71 (Dense)            (None, 1000)              31000     \n",
      "                                                                 \n",
      " dropout_53 (Dropout)        (None, 1000)              0         \n",
      "                                                                 \n",
      " dense_72 (Dense)            (None, 500)               500500    \n",
      "                                                                 \n",
      " dropout_54 (Dropout)        (None, 500)               0         \n",
      "                                                                 \n",
      " dense_73 (Dense)            (None, 250)               125250    \n",
      "                                                                 \n",
      " dropout_55 (Dropout)        (None, 250)               0         \n",
      "                                                                 \n",
      " dense_74 (Dense)            (None, 125)               31375     \n",
      "                                                                 \n",
      " dropout_56 (Dropout)        (None, 125)               0         \n",
      "                                                                 \n",
      " dense_75 (Dense)            (None, 25)                3150      \n",
      "                                                                 \n",
      " dropout_57 (Dropout)        (None, 25)                0         \n",
      "                                                                 \n",
      " dense_76 (Dense)            (None, 5)                 130       \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 708,505\n",
      "Trainable params: 708,505\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/meshael/.local/lib/python3.9/site-packages/keras/optimizer_v2/adam.py:105: UserWarning: The `lr` argument is deprecated, use `learning_rate` instead.\n",
      "  super(Adam, self).__init__(name, **kwargs)\n"
     ]
    }
   ],
   "source": [
    "## try 8\n",
    "\n",
    "model_cnn8 = Sequential()\n",
    "\n",
    "model_cnn8.add(InputLayer(input_shape=(200,150,3)))\n",
    "\n",
    "model_cnn8.add(Conv2D(filters=30, kernel_size=3, activation='tanh', padding='valid'))\n",
    "model_cnn8.add(MaxPooling2D())\n",
    "\n",
    "model_cnn8.add(Conv2D(filters=30, kernel_size=3, activation='tanh', padding='valid'))\n",
    "model_cnn8.add(MaxPooling2D())\n",
    "\n",
    "model_cnn8.add(Conv2D(filters=30, kernel_size=3, activation='tanh', padding='valid'))\n",
    "\n",
    "model_cnn8.add(GlobalAveragePooling2D())\n",
    "model_cnn8.add(Flatten())\n",
    "\n",
    "\n",
    "model_cnn8.add(Dense(1000, activation='tanh'))\n",
    "model_cnn8.add(Dropout(rate=.5, seed=123))\n",
    "\n",
    "model_cnn8.add(Dense(500, activation='tanh'))\n",
    "model_cnn8.add(Dropout(rate=.5, seed=123))\n",
    "\n",
    "model_cnn8.add(Dense(250, activation='tanh'))\n",
    "model_cnn8.add(Dropout(rate=.5, seed=123))\n",
    "\n",
    "model_cnn8.add(Dense(125, activation='tanh'))\n",
    "model_cnn8.add(Dropout(rate=.5, seed=123))\n",
    "\n",
    "model_cnn8.add(Dense(25, activation='tanh'))\n",
    "model_cnn8.add(Dropout(rate=.5, seed=123))\n",
    "\n",
    "model_cnn8.add(Dense(5, activation='softmax'))  \n",
    "\n",
    "model_cnn8.compile( keras.optimizers.Adam(lr=0.001),\n",
    "                    loss='categorical_crossentropy',\n",
    "                    metrics=['accuracy'])\n",
    "\n",
    "\n",
    "model_cnn8.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "08d4018d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/30\n",
      "96/96 [==============================] - 73s 723ms/step - loss: 1.4500 - accuracy: 0.3678 - val_loss: 1.1814 - val_accuracy: 0.4618\n",
      "Epoch 2/30\n",
      "96/96 [==============================] - 79s 825ms/step - loss: 1.2498 - accuracy: 0.4392 - val_loss: 1.0797 - val_accuracy: 0.4853\n",
      "Epoch 3/30\n",
      "96/96 [==============================] - 77s 806ms/step - loss: 1.0909 - accuracy: 0.5152 - val_loss: 1.1917 - val_accuracy: 0.5088\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x7f8d2712a610>"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_cnn8.fit(   X_train,y_train_cat, \n",
    "                  validation_data=(X_val, y_val_cat),\n",
    "                  epochs=30,\n",
    "                  batch_size=32,\n",
    "                  callbacks=early_stopping)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "1ba82678",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WARNING:tensorflow:5 out of the last 122 calls to <function Model.make_predict_function.<locals>.predict_function at 0x7f87f87625e0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has experimental_relax_shapes=True option that relaxes argument shapes that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\n",
      "Training: 0.5581395348837209\n",
      "Val: 0.5088235294117647\n"
     ]
    }
   ],
   "source": [
    "get_accuracy(model_cnn8)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b97bdecb",
   "metadata": {},
   "source": [
    "## transfer Learning "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 171,
   "id": "e64c2124",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_41\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " vgg16 (Functional)          (None, 6, 4, 512)         14714688  \n",
      "                                                                 \n",
      " conv2d_3 (Conv2D)           (None, 4, 2, 15)          69135     \n",
      "                                                                 \n",
      " flatten_43 (Flatten)        (None, 120)               0         \n",
      "                                                                 \n",
      " dense_94 (Dense)            (None, 125)               15125     \n",
      "                                                                 \n",
      " dense_95 (Dense)            (None, 25)                3150      \n",
      "                                                                 \n",
      " dense_96 (Dense)            (None, 5)                 130       \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 14,802,228\n",
      "Trainable params: 87,540\n",
      "Non-trainable params: 14,714,688\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "from keras.applications.vgg16 import VGG16   \n",
    "base = VGG16(weights='imagenet', include_top=False, input_shape=(200, 150, 3))\n",
    "\n",
    "for layer in base.layers:\n",
    "    layer.trainable = False  \n",
    "\n",
    "model_tr1 = Sequential(\n",
    "                        [InputLayer(input_shape=(200,150,3)),\n",
    "                         base,\n",
    "                         Conv2D(filters=15, kernel_size=3, activation='tanh', padding='valid'),\n",
    "\n",
    "                         Flatten(),\n",
    "                         Dense(125, activation='tanh'),   \n",
    "                         Dense(25, activation='tanh'), \n",
    "                         Dense(5, activation='softmax')]\n",
    "                       )\n",
    "\n",
    "model_tr1.compile(  keras.optimizers.Adam(lr=0.001),\n",
    "                    loss='categorical_crossentropy',\n",
    "                    metrics=['accuracy'])\n",
    "\n",
    "model_tr1.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "id": "a29beef4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/10\n",
      "96/96 [==============================] - 737s 8s/step - loss: 0.8289 - accuracy: 0.6476 - val_loss: 0.5511 - val_accuracy: 0.7824\n",
      "Epoch 2/10\n",
      "96/96 [==============================] - 616s 6s/step - loss: 0.5007 - accuracy: 0.7979 - val_loss: 0.4892 - val_accuracy: 0.8029\n",
      "Epoch 3/10\n",
      "96/96 [==============================] - 545s 6s/step - loss: 0.3631 - accuracy: 0.8601 - val_loss: 0.4680 - val_accuracy: 0.8235\n",
      "Epoch 4/10\n",
      "96/96 [==============================] - 527s 5s/step - loss: 0.2829 - accuracy: 0.8949 - val_loss: 0.4943 - val_accuracy: 0.8235\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x7f988a8a82e0>"
      ]
     },
     "execution_count": 172,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_tr1.fit(  X_train, y_train_cat,  \n",
    "                validation_data=(X_val, y_val_cat),\n",
    "                epochs=30,\n",
    "                batch_size=32,\n",
    "                callbacks=[early_stopping]) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "id": "8cc93440",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training: 0.9217163445791026\n",
      "Val: 0.8235294117647058\n"
     ]
    }
   ],
   "source": [
    "get_accuracy(model_tr1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 175,
   "id": "5be2570d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "96/96 [==============================] - 490s 5s/step - loss: 0.2123 - accuracy: 0.9217\n"
     ]
    }
   ],
   "source": [
    "scores=model_tr1.evaluate(X_train,y_train_cat,verbose=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "efe61efe",
   "metadata": {},
   "outputs": [],
   "source": [
    "## VGG19\n",
    "from keras.applications.vgg19 import VGG19\n",
    "\n",
    "base2 = VGG19(weights='imagenet', include_top=False, input_shape=(200, 150, 3))\n",
    "\n",
    "for layer in base2.layers:\n",
    "    layer.trainable = False  \n",
    "\n",
    "model_tr2 = Sequential(\n",
    "                        [InputLayer(input_shape=(200,150,3)),  \n",
    "                         base2,\n",
    "                         \n",
    "                         Flatten(),\n",
    "                         Dense(125, activation='tanh',kernel_regularizer = regularizers.l2(0.015),activity_regularizer=regularizers.l1(0.015)),   \n",
    "                         Dense(25, activation='tanh',kernel_regularizer = regularizers.l2(0.015),activity_regularizer=regularizers.l1(0.015)), \n",
    "                         Dense(5, activation='softmax')]\n",
    "                       )\n",
    "\n",
    "model_tr2.compile(   keras.optimizers.Adam(lr=0.001),\n",
    "                     loss='categorical_crossentropy',\n",
    "                     metrics=['accuracy'])\n",
    "\n",
    "model_tr2.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5c962599",
   "metadata": {},
   "outputs": [],
   "source": [
    "model_tr2.fit(  X_train, y_train_cat,  \n",
    "                validation_data=(X_val, y_val_cat),\n",
    "                epochs=30,\n",
    "                batch_size=32,\n",
    "                callbacks=early_stopping)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ebfcb06e",
   "metadata": {},
   "outputs": [],
   "source": [
    "get_accuracy(model_tr2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 177,
   "id": "f6e8f0c5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "WARNING:tensorflow:`input_shape` is undefined or non-square, or `rows` is not in [96, 128, 160, 192, 224]. Weights for input shape (224, 224) will be loaded as the default.\n",
      "Model: \"sequential_43\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " mobilenetv2_1.00_224 (Funct  (None, 7, 5, 1280)       2257984   \n",
      " ional)                                                          \n",
      "                                                                 \n",
      " flatten_45 (Flatten)        (None, 44800)             0         \n",
      "                                                                 \n",
      " dense_100 (Dense)           (None, 125)               5600125   \n",
      "                                                                 \n",
      " dense_101 (Dense)           (None, 25)                3150      \n",
      "                                                                 \n",
      " dense_102 (Dense)           (None, 5)                 130       \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 7,861,389\n",
      "Trainable params: 5,603,405\n",
      "Non-trainable params: 2,257,984\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "from tensorflow.keras.applications import mobilenet_v2\n",
    "\n",
    "base3 = mobilenet_v2.MobileNetV2(weights='imagenet', include_top=False, input_shape=(200, 150, 3)) \n",
    " \n",
    "# Freeze convolutional layers\n",
    "for layer in base_model.layers:\n",
    "    layer.trainable = False\n",
    "      \n",
    "model_tr3 = Sequential(\n",
    "                        [InputLayer(input_shape=(200,150,3)),  \n",
    "                         base3,\n",
    "                         Flatten(),\n",
    "                         Dense(125, activation='tanh'),   \n",
    "                         Dense(25, activation='tanh'), \n",
    "                         Dense(5, activation='softmax')]\n",
    "                       )\n",
    "\n",
    "model_tr3.compile(  keras.optimizers.Adam(lr=0.001),\n",
    "                    loss='categorical_crossentropy',\n",
    "                     metrics=['accuracy'],\n",
    ")\n",
    "model_tr3.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 178,
   "id": "8a4f2fe4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/30\n",
      "96/96 [==============================] - 155s 1s/step - loss: 0.8770 - accuracy: 0.6191 - val_loss: 0.6847 - val_accuracy: 0.7324\n",
      "Epoch 2/30\n",
      "96/96 [==============================] - 68s 704ms/step - loss: 0.6887 - accuracy: 0.7324 - val_loss: 0.7062 - val_accuracy: 0.7294\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.History at 0x7f9895fa2e50>"
      ]
     },
     "execution_count": 178,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model_tr3.fit(  X_train, y_train_cat,  \n",
    "                validation_data=(X_val, y_val_cat),\n",
    "                epochs=30,\n",
    "                batch_size=32,\n",
    "                callbacks=[early_stopping])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1380638a",
   "metadata": {},
   "outputs": [],
   "source": [
    "get_accuracy(model_tr3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 167,
   "id": "6802739c",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"model_1\"\n",
      "__________________________________________________________________________________________________\n",
      " Layer (type)                   Output Shape         Param #     Connected to                     \n",
      "==================================================================================================\n",
      " input_45 (InputLayer)          [(None, 200, 150, 3  0           []                               \n",
      "                                )]                                                                \n",
      "                                                                                                  \n",
      " rescaling_4 (Rescaling)        (None, 200, 150, 3)  0           ['input_45[0][0]']               \n",
      "                                                                                                  \n",
      " normalization_3 (Normalization  (None, 200, 150, 3)  7          ['rescaling_4[0][0]']            \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " stem_conv_pad (ZeroPadding2D)  (None, 201, 151, 3)  0           ['normalization_3[0][0]']        \n",
      "                                                                                                  \n",
      " stem_conv (Conv2D)             (None, 100, 75, 32)  864         ['stem_conv_pad[0][0]']          \n",
      "                                                                                                  \n",
      " stem_bn (BatchNormalization)   (None, 100, 75, 32)  128         ['stem_conv[0][0]']              \n",
      "                                                                                                  \n",
      " stem_activation (Activation)   (None, 100, 75, 32)  0           ['stem_bn[0][0]']                \n",
      "                                                                                                  \n",
      " block1a_dwconv (DepthwiseConv2  (None, 100, 75, 32)  288        ['stem_activation[0][0]']        \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " block1a_bn (BatchNormalization  (None, 100, 75, 32)  128        ['block1a_dwconv[0][0]']         \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block1a_activation (Activation  (None, 100, 75, 32)  0          ['block1a_bn[0][0]']             \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block1a_se_squeeze (GlobalAver  (None, 32)          0           ['block1a_activation[0][0]']     \n",
      " agePooling2D)                                                                                    \n",
      "                                                                                                  \n",
      " block1a_se_reshape (Reshape)   (None, 1, 1, 32)     0           ['block1a_se_squeeze[0][0]']     \n",
      "                                                                                                  \n",
      " block1a_se_reduce (Conv2D)     (None, 1, 1, 8)      264         ['block1a_se_reshape[0][0]']     \n",
      "                                                                                                  \n",
      " block1a_se_expand (Conv2D)     (None, 1, 1, 32)     288         ['block1a_se_reduce[0][0]']      \n",
      "                                                                                                  \n",
      " block1a_se_excite (Multiply)   (None, 100, 75, 32)  0           ['block1a_activation[0][0]',     \n",
      "                                                                  'block1a_se_expand[0][0]']      \n",
      "                                                                                                  \n",
      " block1a_project_conv (Conv2D)  (None, 100, 75, 16)  512         ['block1a_se_excite[0][0]']      \n",
      "                                                                                                  \n",
      " block1a_project_bn (BatchNorma  (None, 100, 75, 16)  64         ['block1a_project_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " block1b_dwconv (DepthwiseConv2  (None, 100, 75, 16)  144        ['block1a_project_bn[0][0]']     \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " block1b_bn (BatchNormalization  (None, 100, 75, 16)  64         ['block1b_dwconv[0][0]']         \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block1b_activation (Activation  (None, 100, 75, 16)  0          ['block1b_bn[0][0]']             \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block1b_se_squeeze (GlobalAver  (None, 16)          0           ['block1b_activation[0][0]']     \n",
      " agePooling2D)                                                                                    \n",
      "                                                                                                  \n",
      " block1b_se_reshape (Reshape)   (None, 1, 1, 16)     0           ['block1b_se_squeeze[0][0]']     \n",
      "                                                                                                  \n",
      " block1b_se_reduce (Conv2D)     (None, 1, 1, 4)      68          ['block1b_se_reshape[0][0]']     \n",
      "                                                                                                  \n",
      " block1b_se_expand (Conv2D)     (None, 1, 1, 16)     80          ['block1b_se_reduce[0][0]']      \n",
      "                                                                                                  \n",
      " block1b_se_excite (Multiply)   (None, 100, 75, 16)  0           ['block1b_activation[0][0]',     \n",
      "                                                                  'block1b_se_expand[0][0]']      \n",
      "                                                                                                  \n",
      " block1b_project_conv (Conv2D)  (None, 100, 75, 16)  256         ['block1b_se_excite[0][0]']      \n",
      "                                                                                                  \n",
      " block1b_project_bn (BatchNorma  (None, 100, 75, 16)  64         ['block1b_project_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " block1b_drop (Dropout)         (None, 100, 75, 16)  0           ['block1b_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block1b_add (Add)              (None, 100, 75, 16)  0           ['block1b_drop[0][0]',           \n",
      "                                                                  'block1a_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block2a_expand_conv (Conv2D)   (None, 100, 75, 96)  1536        ['block1b_add[0][0]']            \n",
      "                                                                                                  \n",
      " block2a_expand_bn (BatchNormal  (None, 100, 75, 96)  384        ['block2a_expand_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " block2a_expand_activation (Act  (None, 100, 75, 96)  0          ['block2a_expand_bn[0][0]']      \n",
      " ivation)                                                                                         \n",
      "                                                                                                  \n",
      " block2a_dwconv_pad (ZeroPaddin  (None, 101, 77, 96)  0          ['block2a_expand_activation[0][0]\n",
      " g2D)                                                            ']                               \n",
      "                                                                                                  \n",
      " block2a_dwconv (DepthwiseConv2  (None, 50, 38, 96)  864         ['block2a_dwconv_pad[0][0]']     \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " block2a_bn (BatchNormalization  (None, 50, 38, 96)  384         ['block2a_dwconv[0][0]']         \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block2a_activation (Activation  (None, 50, 38, 96)  0           ['block2a_bn[0][0]']             \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block2a_se_squeeze (GlobalAver  (None, 96)          0           ['block2a_activation[0][0]']     \n",
      " agePooling2D)                                                                                    \n",
      "                                                                                                  \n",
      " block2a_se_reshape (Reshape)   (None, 1, 1, 96)     0           ['block2a_se_squeeze[0][0]']     \n",
      "                                                                                                  \n",
      " block2a_se_reduce (Conv2D)     (None, 1, 1, 4)      388         ['block2a_se_reshape[0][0]']     \n",
      "                                                                                                  \n",
      " block2a_se_expand (Conv2D)     (None, 1, 1, 96)     480         ['block2a_se_reduce[0][0]']      \n",
      "                                                                                                  \n",
      " block2a_se_excite (Multiply)   (None, 50, 38, 96)   0           ['block2a_activation[0][0]',     \n",
      "                                                                  'block2a_se_expand[0][0]']      \n",
      "                                                                                                  \n",
      " block2a_project_conv (Conv2D)  (None, 50, 38, 24)   2304        ['block2a_se_excite[0][0]']      \n",
      "                                                                                                  \n",
      " block2a_project_bn (BatchNorma  (None, 50, 38, 24)  96          ['block2a_project_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " block2b_expand_conv (Conv2D)   (None, 50, 38, 144)  3456        ['block2a_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block2b_expand_bn (BatchNormal  (None, 50, 38, 144)  576        ['block2b_expand_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " block2b_expand_activation (Act  (None, 50, 38, 144)  0          ['block2b_expand_bn[0][0]']      \n",
      " ivation)                                                                                         \n",
      "                                                                                                  \n",
      " block2b_dwconv (DepthwiseConv2  (None, 50, 38, 144)  1296       ['block2b_expand_activation[0][0]\n",
      " D)                                                              ']                               \n",
      "                                                                                                  \n",
      " block2b_bn (BatchNormalization  (None, 50, 38, 144)  576        ['block2b_dwconv[0][0]']         \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block2b_activation (Activation  (None, 50, 38, 144)  0          ['block2b_bn[0][0]']             \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block2b_se_squeeze (GlobalAver  (None, 144)         0           ['block2b_activation[0][0]']     \n",
      " agePooling2D)                                                                                    \n",
      "                                                                                                  \n",
      " block2b_se_reshape (Reshape)   (None, 1, 1, 144)    0           ['block2b_se_squeeze[0][0]']     \n",
      "                                                                                                  \n",
      " block2b_se_reduce (Conv2D)     (None, 1, 1, 6)      870         ['block2b_se_reshape[0][0]']     \n",
      "                                                                                                  \n",
      " block2b_se_expand (Conv2D)     (None, 1, 1, 144)    1008        ['block2b_se_reduce[0][0]']      \n",
      "                                                                                                  \n",
      " block2b_se_excite (Multiply)   (None, 50, 38, 144)  0           ['block2b_activation[0][0]',     \n",
      "                                                                  'block2b_se_expand[0][0]']      \n",
      "                                                                                                  \n",
      " block2b_project_conv (Conv2D)  (None, 50, 38, 24)   3456        ['block2b_se_excite[0][0]']      \n",
      "                                                                                                  \n",
      " block2b_project_bn (BatchNorma  (None, 50, 38, 24)  96          ['block2b_project_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " block2b_drop (Dropout)         (None, 50, 38, 24)   0           ['block2b_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block2b_add (Add)              (None, 50, 38, 24)   0           ['block2b_drop[0][0]',           \n",
      "                                                                  'block2a_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block2c_expand_conv (Conv2D)   (None, 50, 38, 144)  3456        ['block2b_add[0][0]']            \n",
      "                                                                                                  \n",
      " block2c_expand_bn (BatchNormal  (None, 50, 38, 144)  576        ['block2c_expand_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " block2c_expand_activation (Act  (None, 50, 38, 144)  0          ['block2c_expand_bn[0][0]']      \n",
      " ivation)                                                                                         \n",
      "                                                                                                  \n",
      " block2c_dwconv (DepthwiseConv2  (None, 50, 38, 144)  1296       ['block2c_expand_activation[0][0]\n",
      " D)                                                              ']                               \n",
      "                                                                                                  \n",
      " block2c_bn (BatchNormalization  (None, 50, 38, 144)  576        ['block2c_dwconv[0][0]']         \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block2c_activation (Activation  (None, 50, 38, 144)  0          ['block2c_bn[0][0]']             \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block2c_se_squeeze (GlobalAver  (None, 144)         0           ['block2c_activation[0][0]']     \n",
      " agePooling2D)                                                                                    \n",
      "                                                                                                  \n",
      " block2c_se_reshape (Reshape)   (None, 1, 1, 144)    0           ['block2c_se_squeeze[0][0]']     \n",
      "                                                                                                  \n",
      " block2c_se_reduce (Conv2D)     (None, 1, 1, 6)      870         ['block2c_se_reshape[0][0]']     \n",
      "                                                                                                  \n",
      " block2c_se_expand (Conv2D)     (None, 1, 1, 144)    1008        ['block2c_se_reduce[0][0]']      \n",
      "                                                                                                  \n",
      " block2c_se_excite (Multiply)   (None, 50, 38, 144)  0           ['block2c_activation[0][0]',     \n",
      "                                                                  'block2c_se_expand[0][0]']      \n",
      "                                                                                                  \n",
      " block2c_project_conv (Conv2D)  (None, 50, 38, 24)   3456        ['block2c_se_excite[0][0]']      \n",
      "                                                                                                  \n",
      " block2c_project_bn (BatchNorma  (None, 50, 38, 24)  96          ['block2c_project_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " block2c_drop (Dropout)         (None, 50, 38, 24)   0           ['block2c_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block2c_add (Add)              (None, 50, 38, 24)   0           ['block2c_drop[0][0]',           \n",
      "                                                                  'block2b_add[0][0]']            \n",
      "                                                                                                  \n",
      " block3a_expand_conv (Conv2D)   (None, 50, 38, 144)  3456        ['block2c_add[0][0]']            \n",
      "                                                                                                  \n",
      " block3a_expand_bn (BatchNormal  (None, 50, 38, 144)  576        ['block3a_expand_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " block3a_expand_activation (Act  (None, 50, 38, 144)  0          ['block3a_expand_bn[0][0]']      \n",
      " ivation)                                                                                         \n",
      "                                                                                                  \n",
      " block3a_dwconv_pad (ZeroPaddin  (None, 53, 41, 144)  0          ['block3a_expand_activation[0][0]\n",
      " g2D)                                                            ']                               \n",
      "                                                                                                  \n",
      " block3a_dwconv (DepthwiseConv2  (None, 25, 19, 144)  3600       ['block3a_dwconv_pad[0][0]']     \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " block3a_bn (BatchNormalization  (None, 25, 19, 144)  576        ['block3a_dwconv[0][0]']         \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block3a_activation (Activation  (None, 25, 19, 144)  0          ['block3a_bn[0][0]']             \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block3a_se_squeeze (GlobalAver  (None, 144)         0           ['block3a_activation[0][0]']     \n",
      " agePooling2D)                                                                                    \n",
      "                                                                                                  \n",
      " block3a_se_reshape (Reshape)   (None, 1, 1, 144)    0           ['block3a_se_squeeze[0][0]']     \n",
      "                                                                                                  \n",
      " block3a_se_reduce (Conv2D)     (None, 1, 1, 6)      870         ['block3a_se_reshape[0][0]']     \n",
      "                                                                                                  \n",
      " block3a_se_expand (Conv2D)     (None, 1, 1, 144)    1008        ['block3a_se_reduce[0][0]']      \n",
      "                                                                                                  \n",
      " block3a_se_excite (Multiply)   (None, 25, 19, 144)  0           ['block3a_activation[0][0]',     \n",
      "                                                                  'block3a_se_expand[0][0]']      \n",
      "                                                                                                  \n",
      " block3a_project_conv (Conv2D)  (None, 25, 19, 48)   6912        ['block3a_se_excite[0][0]']      \n",
      "                                                                                                  \n",
      " block3a_project_bn (BatchNorma  (None, 25, 19, 48)  192         ['block3a_project_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " block3b_expand_conv (Conv2D)   (None, 25, 19, 288)  13824       ['block3a_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block3b_expand_bn (BatchNormal  (None, 25, 19, 288)  1152       ['block3b_expand_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " block3b_expand_activation (Act  (None, 25, 19, 288)  0          ['block3b_expand_bn[0][0]']      \n",
      " ivation)                                                                                         \n",
      "                                                                                                  \n",
      " block3b_dwconv (DepthwiseConv2  (None, 25, 19, 288)  7200       ['block3b_expand_activation[0][0]\n",
      " D)                                                              ']                               \n",
      "                                                                                                  \n",
      " block3b_bn (BatchNormalization  (None, 25, 19, 288)  1152       ['block3b_dwconv[0][0]']         \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block3b_activation (Activation  (None, 25, 19, 288)  0          ['block3b_bn[0][0]']             \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block3b_se_squeeze (GlobalAver  (None, 288)         0           ['block3b_activation[0][0]']     \n",
      " agePooling2D)                                                                                    \n",
      "                                                                                                  \n",
      " block3b_se_reshape (Reshape)   (None, 1, 1, 288)    0           ['block3b_se_squeeze[0][0]']     \n",
      "                                                                                                  \n",
      " block3b_se_reduce (Conv2D)     (None, 1, 1, 12)     3468        ['block3b_se_reshape[0][0]']     \n",
      "                                                                                                  \n",
      " block3b_se_expand (Conv2D)     (None, 1, 1, 288)    3744        ['block3b_se_reduce[0][0]']      \n",
      "                                                                                                  \n",
      " block3b_se_excite (Multiply)   (None, 25, 19, 288)  0           ['block3b_activation[0][0]',     \n",
      "                                                                  'block3b_se_expand[0][0]']      \n",
      "                                                                                                  \n",
      " block3b_project_conv (Conv2D)  (None, 25, 19, 48)   13824       ['block3b_se_excite[0][0]']      \n",
      "                                                                                                  \n",
      " block3b_project_bn (BatchNorma  (None, 25, 19, 48)  192         ['block3b_project_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " block3b_drop (Dropout)         (None, 25, 19, 48)   0           ['block3b_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block3b_add (Add)              (None, 25, 19, 48)   0           ['block3b_drop[0][0]',           \n",
      "                                                                  'block3a_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block3c_expand_conv (Conv2D)   (None, 25, 19, 288)  13824       ['block3b_add[0][0]']            \n",
      "                                                                                                  \n",
      " block3c_expand_bn (BatchNormal  (None, 25, 19, 288)  1152       ['block3c_expand_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " block3c_expand_activation (Act  (None, 25, 19, 288)  0          ['block3c_expand_bn[0][0]']      \n",
      " ivation)                                                                                         \n",
      "                                                                                                  \n",
      " block3c_dwconv (DepthwiseConv2  (None, 25, 19, 288)  7200       ['block3c_expand_activation[0][0]\n",
      " D)                                                              ']                               \n",
      "                                                                                                  \n",
      " block3c_bn (BatchNormalization  (None, 25, 19, 288)  1152       ['block3c_dwconv[0][0]']         \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block3c_activation (Activation  (None, 25, 19, 288)  0          ['block3c_bn[0][0]']             \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block3c_se_squeeze (GlobalAver  (None, 288)         0           ['block3c_activation[0][0]']     \n",
      " agePooling2D)                                                                                    \n",
      "                                                                                                  \n",
      " block3c_se_reshape (Reshape)   (None, 1, 1, 288)    0           ['block3c_se_squeeze[0][0]']     \n",
      "                                                                                                  \n",
      " block3c_se_reduce (Conv2D)     (None, 1, 1, 12)     3468        ['block3c_se_reshape[0][0]']     \n",
      "                                                                                                  \n",
      " block3c_se_expand (Conv2D)     (None, 1, 1, 288)    3744        ['block3c_se_reduce[0][0]']      \n",
      "                                                                                                  \n",
      " block3c_se_excite (Multiply)   (None, 25, 19, 288)  0           ['block3c_activation[0][0]',     \n",
      "                                                                  'block3c_se_expand[0][0]']      \n",
      "                                                                                                  \n",
      " block3c_project_conv (Conv2D)  (None, 25, 19, 48)   13824       ['block3c_se_excite[0][0]']      \n",
      "                                                                                                  \n",
      " block3c_project_bn (BatchNorma  (None, 25, 19, 48)  192         ['block3c_project_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " block3c_drop (Dropout)         (None, 25, 19, 48)   0           ['block3c_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block3c_add (Add)              (None, 25, 19, 48)   0           ['block3c_drop[0][0]',           \n",
      "                                                                  'block3b_add[0][0]']            \n",
      "                                                                                                  \n",
      " block4a_expand_conv (Conv2D)   (None, 25, 19, 288)  13824       ['block3c_add[0][0]']            \n",
      "                                                                                                  \n",
      " block4a_expand_bn (BatchNormal  (None, 25, 19, 288)  1152       ['block4a_expand_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " block4a_expand_activation (Act  (None, 25, 19, 288)  0          ['block4a_expand_bn[0][0]']      \n",
      " ivation)                                                                                         \n",
      "                                                                                                  \n",
      " block4a_dwconv_pad (ZeroPaddin  (None, 27, 21, 288)  0          ['block4a_expand_activation[0][0]\n",
      " g2D)                                                            ']                               \n",
      "                                                                                                  \n",
      " block4a_dwconv (DepthwiseConv2  (None, 13, 10, 288)  2592       ['block4a_dwconv_pad[0][0]']     \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " block4a_bn (BatchNormalization  (None, 13, 10, 288)  1152       ['block4a_dwconv[0][0]']         \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block4a_activation (Activation  (None, 13, 10, 288)  0          ['block4a_bn[0][0]']             \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block4a_se_squeeze (GlobalAver  (None, 288)         0           ['block4a_activation[0][0]']     \n",
      " agePooling2D)                                                                                    \n",
      "                                                                                                  \n",
      " block4a_se_reshape (Reshape)   (None, 1, 1, 288)    0           ['block4a_se_squeeze[0][0]']     \n",
      "                                                                                                  \n",
      " block4a_se_reduce (Conv2D)     (None, 1, 1, 12)     3468        ['block4a_se_reshape[0][0]']     \n",
      "                                                                                                  \n",
      " block4a_se_expand (Conv2D)     (None, 1, 1, 288)    3744        ['block4a_se_reduce[0][0]']      \n",
      "                                                                                                  \n",
      " block4a_se_excite (Multiply)   (None, 13, 10, 288)  0           ['block4a_activation[0][0]',     \n",
      "                                                                  'block4a_se_expand[0][0]']      \n",
      "                                                                                                  \n",
      " block4a_project_conv (Conv2D)  (None, 13, 10, 88)   25344       ['block4a_se_excite[0][0]']      \n",
      "                                                                                                  \n",
      " block4a_project_bn (BatchNorma  (None, 13, 10, 88)  352         ['block4a_project_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " block4b_expand_conv (Conv2D)   (None, 13, 10, 528)  46464       ['block4a_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block4b_expand_bn (BatchNormal  (None, 13, 10, 528)  2112       ['block4b_expand_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " block4b_expand_activation (Act  (None, 13, 10, 528)  0          ['block4b_expand_bn[0][0]']      \n",
      " ivation)                                                                                         \n",
      "                                                                                                  \n",
      " block4b_dwconv (DepthwiseConv2  (None, 13, 10, 528)  4752       ['block4b_expand_activation[0][0]\n",
      " D)                                                              ']                               \n",
      "                                                                                                  \n",
      " block4b_bn (BatchNormalization  (None, 13, 10, 528)  2112       ['block4b_dwconv[0][0]']         \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block4b_activation (Activation  (None, 13, 10, 528)  0          ['block4b_bn[0][0]']             \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block4b_se_squeeze (GlobalAver  (None, 528)         0           ['block4b_activation[0][0]']     \n",
      " agePooling2D)                                                                                    \n",
      "                                                                                                  \n",
      " block4b_se_reshape (Reshape)   (None, 1, 1, 528)    0           ['block4b_se_squeeze[0][0]']     \n",
      "                                                                                                  \n",
      " block4b_se_reduce (Conv2D)     (None, 1, 1, 22)     11638       ['block4b_se_reshape[0][0]']     \n",
      "                                                                                                  \n",
      " block4b_se_expand (Conv2D)     (None, 1, 1, 528)    12144       ['block4b_se_reduce[0][0]']      \n",
      "                                                                                                  \n",
      " block4b_se_excite (Multiply)   (None, 13, 10, 528)  0           ['block4b_activation[0][0]',     \n",
      "                                                                  'block4b_se_expand[0][0]']      \n",
      "                                                                                                  \n",
      " block4b_project_conv (Conv2D)  (None, 13, 10, 88)   46464       ['block4b_se_excite[0][0]']      \n",
      "                                                                                                  \n",
      " block4b_project_bn (BatchNorma  (None, 13, 10, 88)  352         ['block4b_project_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " block4b_drop (Dropout)         (None, 13, 10, 88)   0           ['block4b_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block4b_add (Add)              (None, 13, 10, 88)   0           ['block4b_drop[0][0]',           \n",
      "                                                                  'block4a_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block4c_expand_conv (Conv2D)   (None, 13, 10, 528)  46464       ['block4b_add[0][0]']            \n",
      "                                                                                                  \n",
      " block4c_expand_bn (BatchNormal  (None, 13, 10, 528)  2112       ['block4c_expand_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " block4c_expand_activation (Act  (None, 13, 10, 528)  0          ['block4c_expand_bn[0][0]']      \n",
      " ivation)                                                                                         \n",
      "                                                                                                  \n",
      " block4c_dwconv (DepthwiseConv2  (None, 13, 10, 528)  4752       ['block4c_expand_activation[0][0]\n",
      " D)                                                              ']                               \n",
      "                                                                                                  \n",
      " block4c_bn (BatchNormalization  (None, 13, 10, 528)  2112       ['block4c_dwconv[0][0]']         \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block4c_activation (Activation  (None, 13, 10, 528)  0          ['block4c_bn[0][0]']             \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block4c_se_squeeze (GlobalAver  (None, 528)         0           ['block4c_activation[0][0]']     \n",
      " agePooling2D)                                                                                    \n",
      "                                                                                                  \n",
      " block4c_se_reshape (Reshape)   (None, 1, 1, 528)    0           ['block4c_se_squeeze[0][0]']     \n",
      "                                                                                                  \n",
      " block4c_se_reduce (Conv2D)     (None, 1, 1, 22)     11638       ['block4c_se_reshape[0][0]']     \n",
      "                                                                                                  \n",
      " block4c_se_expand (Conv2D)     (None, 1, 1, 528)    12144       ['block4c_se_reduce[0][0]']      \n",
      "                                                                                                  \n",
      " block4c_se_excite (Multiply)   (None, 13, 10, 528)  0           ['block4c_activation[0][0]',     \n",
      "                                                                  'block4c_se_expand[0][0]']      \n",
      "                                                                                                  \n",
      " block4c_project_conv (Conv2D)  (None, 13, 10, 88)   46464       ['block4c_se_excite[0][0]']      \n",
      "                                                                                                  \n",
      " block4c_project_bn (BatchNorma  (None, 13, 10, 88)  352         ['block4c_project_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " block4c_drop (Dropout)         (None, 13, 10, 88)   0           ['block4c_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block4c_add (Add)              (None, 13, 10, 88)   0           ['block4c_drop[0][0]',           \n",
      "                                                                  'block4b_add[0][0]']            \n",
      "                                                                                                  \n",
      " block4d_expand_conv (Conv2D)   (None, 13, 10, 528)  46464       ['block4c_add[0][0]']            \n",
      "                                                                                                  \n",
      " block4d_expand_bn (BatchNormal  (None, 13, 10, 528)  2112       ['block4d_expand_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " block4d_expand_activation (Act  (None, 13, 10, 528)  0          ['block4d_expand_bn[0][0]']      \n",
      " ivation)                                                                                         \n",
      "                                                                                                  \n",
      " block4d_dwconv (DepthwiseConv2  (None, 13, 10, 528)  4752       ['block4d_expand_activation[0][0]\n",
      " D)                                                              ']                               \n",
      "                                                                                                  \n",
      " block4d_bn (BatchNormalization  (None, 13, 10, 528)  2112       ['block4d_dwconv[0][0]']         \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block4d_activation (Activation  (None, 13, 10, 528)  0          ['block4d_bn[0][0]']             \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block4d_se_squeeze (GlobalAver  (None, 528)         0           ['block4d_activation[0][0]']     \n",
      " agePooling2D)                                                                                    \n",
      "                                                                                                  \n",
      " block4d_se_reshape (Reshape)   (None, 1, 1, 528)    0           ['block4d_se_squeeze[0][0]']     \n",
      "                                                                                                  \n",
      " block4d_se_reduce (Conv2D)     (None, 1, 1, 22)     11638       ['block4d_se_reshape[0][0]']     \n",
      "                                                                                                  \n",
      " block4d_se_expand (Conv2D)     (None, 1, 1, 528)    12144       ['block4d_se_reduce[0][0]']      \n",
      "                                                                                                  \n",
      " block4d_se_excite (Multiply)   (None, 13, 10, 528)  0           ['block4d_activation[0][0]',     \n",
      "                                                                  'block4d_se_expand[0][0]']      \n",
      "                                                                                                  \n",
      " block4d_project_conv (Conv2D)  (None, 13, 10, 88)   46464       ['block4d_se_excite[0][0]']      \n",
      "                                                                                                  \n",
      " block4d_project_bn (BatchNorma  (None, 13, 10, 88)  352         ['block4d_project_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " block4d_drop (Dropout)         (None, 13, 10, 88)   0           ['block4d_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block4d_add (Add)              (None, 13, 10, 88)   0           ['block4d_drop[0][0]',           \n",
      "                                                                  'block4c_add[0][0]']            \n",
      "                                                                                                  \n",
      " block5a_expand_conv (Conv2D)   (None, 13, 10, 528)  46464       ['block4d_add[0][0]']            \n",
      "                                                                                                  \n",
      " block5a_expand_bn (BatchNormal  (None, 13, 10, 528)  2112       ['block5a_expand_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " block5a_expand_activation (Act  (None, 13, 10, 528)  0          ['block5a_expand_bn[0][0]']      \n",
      " ivation)                                                                                         \n",
      "                                                                                                  \n",
      " block5a_dwconv (DepthwiseConv2  (None, 13, 10, 528)  13200      ['block5a_expand_activation[0][0]\n",
      " D)                                                              ']                               \n",
      "                                                                                                  \n",
      " block5a_bn (BatchNormalization  (None, 13, 10, 528)  2112       ['block5a_dwconv[0][0]']         \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block5a_activation (Activation  (None, 13, 10, 528)  0          ['block5a_bn[0][0]']             \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block5a_se_squeeze (GlobalAver  (None, 528)         0           ['block5a_activation[0][0]']     \n",
      " agePooling2D)                                                                                    \n",
      "                                                                                                  \n",
      " block5a_se_reshape (Reshape)   (None, 1, 1, 528)    0           ['block5a_se_squeeze[0][0]']     \n",
      "                                                                                                  \n",
      " block5a_se_reduce (Conv2D)     (None, 1, 1, 22)     11638       ['block5a_se_reshape[0][0]']     \n",
      "                                                                                                  \n",
      " block5a_se_expand (Conv2D)     (None, 1, 1, 528)    12144       ['block5a_se_reduce[0][0]']      \n",
      "                                                                                                  \n",
      " block5a_se_excite (Multiply)   (None, 13, 10, 528)  0           ['block5a_activation[0][0]',     \n",
      "                                                                  'block5a_se_expand[0][0]']      \n",
      "                                                                                                  \n",
      " block5a_project_conv (Conv2D)  (None, 13, 10, 120)  63360       ['block5a_se_excite[0][0]']      \n",
      "                                                                                                  \n",
      " block5a_project_bn (BatchNorma  (None, 13, 10, 120)  480        ['block5a_project_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " block5b_expand_conv (Conv2D)   (None, 13, 10, 720)  86400       ['block5a_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block5b_expand_bn (BatchNormal  (None, 13, 10, 720)  2880       ['block5b_expand_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " block5b_expand_activation (Act  (None, 13, 10, 720)  0          ['block5b_expand_bn[0][0]']      \n",
      " ivation)                                                                                         \n",
      "                                                                                                  \n",
      " block5b_dwconv (DepthwiseConv2  (None, 13, 10, 720)  18000      ['block5b_expand_activation[0][0]\n",
      " D)                                                              ']                               \n",
      "                                                                                                  \n",
      " block5b_bn (BatchNormalization  (None, 13, 10, 720)  2880       ['block5b_dwconv[0][0]']         \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block5b_activation (Activation  (None, 13, 10, 720)  0          ['block5b_bn[0][0]']             \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block5b_se_squeeze (GlobalAver  (None, 720)         0           ['block5b_activation[0][0]']     \n",
      " agePooling2D)                                                                                    \n",
      "                                                                                                  \n",
      " block5b_se_reshape (Reshape)   (None, 1, 1, 720)    0           ['block5b_se_squeeze[0][0]']     \n",
      "                                                                                                  \n",
      " block5b_se_reduce (Conv2D)     (None, 1, 1, 30)     21630       ['block5b_se_reshape[0][0]']     \n",
      "                                                                                                  \n",
      " block5b_se_expand (Conv2D)     (None, 1, 1, 720)    22320       ['block5b_se_reduce[0][0]']      \n",
      "                                                                                                  \n",
      " block5b_se_excite (Multiply)   (None, 13, 10, 720)  0           ['block5b_activation[0][0]',     \n",
      "                                                                  'block5b_se_expand[0][0]']      \n",
      "                                                                                                  \n",
      " block5b_project_conv (Conv2D)  (None, 13, 10, 120)  86400       ['block5b_se_excite[0][0]']      \n",
      "                                                                                                  \n",
      " block5b_project_bn (BatchNorma  (None, 13, 10, 120)  480        ['block5b_project_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " block5b_drop (Dropout)         (None, 13, 10, 120)  0           ['block5b_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block5b_add (Add)              (None, 13, 10, 120)  0           ['block5b_drop[0][0]',           \n",
      "                                                                  'block5a_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block5c_expand_conv (Conv2D)   (None, 13, 10, 720)  86400       ['block5b_add[0][0]']            \n",
      "                                                                                                  \n",
      " block5c_expand_bn (BatchNormal  (None, 13, 10, 720)  2880       ['block5c_expand_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " block5c_expand_activation (Act  (None, 13, 10, 720)  0          ['block5c_expand_bn[0][0]']      \n",
      " ivation)                                                                                         \n",
      "                                                                                                  \n",
      " block5c_dwconv (DepthwiseConv2  (None, 13, 10, 720)  18000      ['block5c_expand_activation[0][0]\n",
      " D)                                                              ']                               \n",
      "                                                                                                  \n",
      " block5c_bn (BatchNormalization  (None, 13, 10, 720)  2880       ['block5c_dwconv[0][0]']         \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block5c_activation (Activation  (None, 13, 10, 720)  0          ['block5c_bn[0][0]']             \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block5c_se_squeeze (GlobalAver  (None, 720)         0           ['block5c_activation[0][0]']     \n",
      " agePooling2D)                                                                                    \n",
      "                                                                                                  \n",
      " block5c_se_reshape (Reshape)   (None, 1, 1, 720)    0           ['block5c_se_squeeze[0][0]']     \n",
      "                                                                                                  \n",
      " block5c_se_reduce (Conv2D)     (None, 1, 1, 30)     21630       ['block5c_se_reshape[0][0]']     \n",
      "                                                                                                  \n",
      " block5c_se_expand (Conv2D)     (None, 1, 1, 720)    22320       ['block5c_se_reduce[0][0]']      \n",
      "                                                                                                  \n",
      " block5c_se_excite (Multiply)   (None, 13, 10, 720)  0           ['block5c_activation[0][0]',     \n",
      "                                                                  'block5c_se_expand[0][0]']      \n",
      "                                                                                                  \n",
      " block5c_project_conv (Conv2D)  (None, 13, 10, 120)  86400       ['block5c_se_excite[0][0]']      \n",
      "                                                                                                  \n",
      " block5c_project_bn (BatchNorma  (None, 13, 10, 120)  480        ['block5c_project_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " block5c_drop (Dropout)         (None, 13, 10, 120)  0           ['block5c_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block5c_add (Add)              (None, 13, 10, 120)  0           ['block5c_drop[0][0]',           \n",
      "                                                                  'block5b_add[0][0]']            \n",
      "                                                                                                  \n",
      " block5d_expand_conv (Conv2D)   (None, 13, 10, 720)  86400       ['block5c_add[0][0]']            \n",
      "                                                                                                  \n",
      " block5d_expand_bn (BatchNormal  (None, 13, 10, 720)  2880       ['block5d_expand_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " block5d_expand_activation (Act  (None, 13, 10, 720)  0          ['block5d_expand_bn[0][0]']      \n",
      " ivation)                                                                                         \n",
      "                                                                                                  \n",
      " block5d_dwconv (DepthwiseConv2  (None, 13, 10, 720)  18000      ['block5d_expand_activation[0][0]\n",
      " D)                                                              ']                               \n",
      "                                                                                                  \n",
      " block5d_bn (BatchNormalization  (None, 13, 10, 720)  2880       ['block5d_dwconv[0][0]']         \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block5d_activation (Activation  (None, 13, 10, 720)  0          ['block5d_bn[0][0]']             \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block5d_se_squeeze (GlobalAver  (None, 720)         0           ['block5d_activation[0][0]']     \n",
      " agePooling2D)                                                                                    \n",
      "                                                                                                  \n",
      " block5d_se_reshape (Reshape)   (None, 1, 1, 720)    0           ['block5d_se_squeeze[0][0]']     \n",
      "                                                                                                  \n",
      " block5d_se_reduce (Conv2D)     (None, 1, 1, 30)     21630       ['block5d_se_reshape[0][0]']     \n",
      "                                                                                                  \n",
      " block5d_se_expand (Conv2D)     (None, 1, 1, 720)    22320       ['block5d_se_reduce[0][0]']      \n",
      "                                                                                                  \n",
      " block5d_se_excite (Multiply)   (None, 13, 10, 720)  0           ['block5d_activation[0][0]',     \n",
      "                                                                  'block5d_se_expand[0][0]']      \n",
      "                                                                                                  \n",
      " block5d_project_conv (Conv2D)  (None, 13, 10, 120)  86400       ['block5d_se_excite[0][0]']      \n",
      "                                                                                                  \n",
      " block5d_project_bn (BatchNorma  (None, 13, 10, 120)  480        ['block5d_project_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " block5d_drop (Dropout)         (None, 13, 10, 120)  0           ['block5d_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block5d_add (Add)              (None, 13, 10, 120)  0           ['block5d_drop[0][0]',           \n",
      "                                                                  'block5c_add[0][0]']            \n",
      "                                                                                                  \n",
      " block6a_expand_conv (Conv2D)   (None, 13, 10, 720)  86400       ['block5d_add[0][0]']            \n",
      "                                                                                                  \n",
      " block6a_expand_bn (BatchNormal  (None, 13, 10, 720)  2880       ['block6a_expand_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " block6a_expand_activation (Act  (None, 13, 10, 720)  0          ['block6a_expand_bn[0][0]']      \n",
      " ivation)                                                                                         \n",
      "                                                                                                  \n",
      " block6a_dwconv_pad (ZeroPaddin  (None, 17, 13, 720)  0          ['block6a_expand_activation[0][0]\n",
      " g2D)                                                            ']                               \n",
      "                                                                                                  \n",
      " block6a_dwconv (DepthwiseConv2  (None, 7, 5, 720)   18000       ['block6a_dwconv_pad[0][0]']     \n",
      " D)                                                                                               \n",
      "                                                                                                  \n",
      " block6a_bn (BatchNormalization  (None, 7, 5, 720)   2880        ['block6a_dwconv[0][0]']         \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block6a_activation (Activation  (None, 7, 5, 720)   0           ['block6a_bn[0][0]']             \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block6a_se_squeeze (GlobalAver  (None, 720)         0           ['block6a_activation[0][0]']     \n",
      " agePooling2D)                                                                                    \n",
      "                                                                                                  \n",
      " block6a_se_reshape (Reshape)   (None, 1, 1, 720)    0           ['block6a_se_squeeze[0][0]']     \n",
      "                                                                                                  \n",
      " block6a_se_reduce (Conv2D)     (None, 1, 1, 30)     21630       ['block6a_se_reshape[0][0]']     \n",
      "                                                                                                  \n",
      " block6a_se_expand (Conv2D)     (None, 1, 1, 720)    22320       ['block6a_se_reduce[0][0]']      \n",
      "                                                                                                  \n",
      " block6a_se_excite (Multiply)   (None, 7, 5, 720)    0           ['block6a_activation[0][0]',     \n",
      "                                                                  'block6a_se_expand[0][0]']      \n",
      "                                                                                                  \n",
      " block6a_project_conv (Conv2D)  (None, 7, 5, 208)    149760      ['block6a_se_excite[0][0]']      \n",
      "                                                                                                  \n",
      " block6a_project_bn (BatchNorma  (None, 7, 5, 208)   832         ['block6a_project_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " block6b_expand_conv (Conv2D)   (None, 7, 5, 1248)   259584      ['block6a_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block6b_expand_bn (BatchNormal  (None, 7, 5, 1248)  4992        ['block6b_expand_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " block6b_expand_activation (Act  (None, 7, 5, 1248)  0           ['block6b_expand_bn[0][0]']      \n",
      " ivation)                                                                                         \n",
      "                                                                                                  \n",
      " block6b_dwconv (DepthwiseConv2  (None, 7, 5, 1248)  31200       ['block6b_expand_activation[0][0]\n",
      " D)                                                              ']                               \n",
      "                                                                                                  \n",
      " block6b_bn (BatchNormalization  (None, 7, 5, 1248)  4992        ['block6b_dwconv[0][0]']         \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block6b_activation (Activation  (None, 7, 5, 1248)  0           ['block6b_bn[0][0]']             \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block6b_se_squeeze (GlobalAver  (None, 1248)        0           ['block6b_activation[0][0]']     \n",
      " agePooling2D)                                                                                    \n",
      "                                                                                                  \n",
      " block6b_se_reshape (Reshape)   (None, 1, 1, 1248)   0           ['block6b_se_squeeze[0][0]']     \n",
      "                                                                                                  \n",
      " block6b_se_reduce (Conv2D)     (None, 1, 1, 52)     64948       ['block6b_se_reshape[0][0]']     \n",
      "                                                                                                  \n",
      " block6b_se_expand (Conv2D)     (None, 1, 1, 1248)   66144       ['block6b_se_reduce[0][0]']      \n",
      "                                                                                                  \n",
      " block6b_se_excite (Multiply)   (None, 7, 5, 1248)   0           ['block6b_activation[0][0]',     \n",
      "                                                                  'block6b_se_expand[0][0]']      \n",
      "                                                                                                  \n",
      " block6b_project_conv (Conv2D)  (None, 7, 5, 208)    259584      ['block6b_se_excite[0][0]']      \n",
      "                                                                                                  \n",
      " block6b_project_bn (BatchNorma  (None, 7, 5, 208)   832         ['block6b_project_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " block6b_drop (Dropout)         (None, 7, 5, 208)    0           ['block6b_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block6b_add (Add)              (None, 7, 5, 208)    0           ['block6b_drop[0][0]',           \n",
      "                                                                  'block6a_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block6c_expand_conv (Conv2D)   (None, 7, 5, 1248)   259584      ['block6b_add[0][0]']            \n",
      "                                                                                                  \n",
      " block6c_expand_bn (BatchNormal  (None, 7, 5, 1248)  4992        ['block6c_expand_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " block6c_expand_activation (Act  (None, 7, 5, 1248)  0           ['block6c_expand_bn[0][0]']      \n",
      " ivation)                                                                                         \n",
      "                                                                                                  \n",
      " block6c_dwconv (DepthwiseConv2  (None, 7, 5, 1248)  31200       ['block6c_expand_activation[0][0]\n",
      " D)                                                              ']                               \n",
      "                                                                                                  \n",
      " block6c_bn (BatchNormalization  (None, 7, 5, 1248)  4992        ['block6c_dwconv[0][0]']         \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block6c_activation (Activation  (None, 7, 5, 1248)  0           ['block6c_bn[0][0]']             \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block6c_se_squeeze (GlobalAver  (None, 1248)        0           ['block6c_activation[0][0]']     \n",
      " agePooling2D)                                                                                    \n",
      "                                                                                                  \n",
      " block6c_se_reshape (Reshape)   (None, 1, 1, 1248)   0           ['block6c_se_squeeze[0][0]']     \n",
      "                                                                                                  \n",
      " block6c_se_reduce (Conv2D)     (None, 1, 1, 52)     64948       ['block6c_se_reshape[0][0]']     \n",
      "                                                                                                  \n",
      " block6c_se_expand (Conv2D)     (None, 1, 1, 1248)   66144       ['block6c_se_reduce[0][0]']      \n",
      "                                                                                                  \n",
      " block6c_se_excite (Multiply)   (None, 7, 5, 1248)   0           ['block6c_activation[0][0]',     \n",
      "                                                                  'block6c_se_expand[0][0]']      \n",
      "                                                                                                  \n",
      " block6c_project_conv (Conv2D)  (None, 7, 5, 208)    259584      ['block6c_se_excite[0][0]']      \n",
      "                                                                                                  \n",
      " block6c_project_bn (BatchNorma  (None, 7, 5, 208)   832         ['block6c_project_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " block6c_drop (Dropout)         (None, 7, 5, 208)    0           ['block6c_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block6c_add (Add)              (None, 7, 5, 208)    0           ['block6c_drop[0][0]',           \n",
      "                                                                  'block6b_add[0][0]']            \n",
      "                                                                                                  \n",
      " block6d_expand_conv (Conv2D)   (None, 7, 5, 1248)   259584      ['block6c_add[0][0]']            \n",
      "                                                                                                  \n",
      " block6d_expand_bn (BatchNormal  (None, 7, 5, 1248)  4992        ['block6d_expand_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " block6d_expand_activation (Act  (None, 7, 5, 1248)  0           ['block6d_expand_bn[0][0]']      \n",
      " ivation)                                                                                         \n",
      "                                                                                                  \n",
      " block6d_dwconv (DepthwiseConv2  (None, 7, 5, 1248)  31200       ['block6d_expand_activation[0][0]\n",
      " D)                                                              ']                               \n",
      "                                                                                                  \n",
      " block6d_bn (BatchNormalization  (None, 7, 5, 1248)  4992        ['block6d_dwconv[0][0]']         \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block6d_activation (Activation  (None, 7, 5, 1248)  0           ['block6d_bn[0][0]']             \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block6d_se_squeeze (GlobalAver  (None, 1248)        0           ['block6d_activation[0][0]']     \n",
      " agePooling2D)                                                                                    \n",
      "                                                                                                  \n",
      " block6d_se_reshape (Reshape)   (None, 1, 1, 1248)   0           ['block6d_se_squeeze[0][0]']     \n",
      "                                                                                                  \n",
      " block6d_se_reduce (Conv2D)     (None, 1, 1, 52)     64948       ['block6d_se_reshape[0][0]']     \n",
      "                                                                                                  \n",
      " block6d_se_expand (Conv2D)     (None, 1, 1, 1248)   66144       ['block6d_se_reduce[0][0]']      \n",
      "                                                                                                  \n",
      " block6d_se_excite (Multiply)   (None, 7, 5, 1248)   0           ['block6d_activation[0][0]',     \n",
      "                                                                  'block6d_se_expand[0][0]']      \n",
      "                                                                                                  \n",
      " block6d_project_conv (Conv2D)  (None, 7, 5, 208)    259584      ['block6d_se_excite[0][0]']      \n",
      "                                                                                                  \n",
      " block6d_project_bn (BatchNorma  (None, 7, 5, 208)   832         ['block6d_project_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " block6d_drop (Dropout)         (None, 7, 5, 208)    0           ['block6d_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block6d_add (Add)              (None, 7, 5, 208)    0           ['block6d_drop[0][0]',           \n",
      "                                                                  'block6c_add[0][0]']            \n",
      "                                                                                                  \n",
      " block6e_expand_conv (Conv2D)   (None, 7, 5, 1248)   259584      ['block6d_add[0][0]']            \n",
      "                                                                                                  \n",
      " block6e_expand_bn (BatchNormal  (None, 7, 5, 1248)  4992        ['block6e_expand_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " block6e_expand_activation (Act  (None, 7, 5, 1248)  0           ['block6e_expand_bn[0][0]']      \n",
      " ivation)                                                                                         \n",
      "                                                                                                  \n",
      " block6e_dwconv (DepthwiseConv2  (None, 7, 5, 1248)  31200       ['block6e_expand_activation[0][0]\n",
      " D)                                                              ']                               \n",
      "                                                                                                  \n",
      " block6e_bn (BatchNormalization  (None, 7, 5, 1248)  4992        ['block6e_dwconv[0][0]']         \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block6e_activation (Activation  (None, 7, 5, 1248)  0           ['block6e_bn[0][0]']             \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block6e_se_squeeze (GlobalAver  (None, 1248)        0           ['block6e_activation[0][0]']     \n",
      " agePooling2D)                                                                                    \n",
      "                                                                                                  \n",
      " block6e_se_reshape (Reshape)   (None, 1, 1, 1248)   0           ['block6e_se_squeeze[0][0]']     \n",
      "                                                                                                  \n",
      " block6e_se_reduce (Conv2D)     (None, 1, 1, 52)     64948       ['block6e_se_reshape[0][0]']     \n",
      "                                                                                                  \n",
      " block6e_se_expand (Conv2D)     (None, 1, 1, 1248)   66144       ['block6e_se_reduce[0][0]']      \n",
      "                                                                                                  \n",
      " block6e_se_excite (Multiply)   (None, 7, 5, 1248)   0           ['block6e_activation[0][0]',     \n",
      "                                                                  'block6e_se_expand[0][0]']      \n",
      "                                                                                                  \n",
      " block6e_project_conv (Conv2D)  (None, 7, 5, 208)    259584      ['block6e_se_excite[0][0]']      \n",
      "                                                                                                  \n",
      " block6e_project_bn (BatchNorma  (None, 7, 5, 208)   832         ['block6e_project_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " block6e_drop (Dropout)         (None, 7, 5, 208)    0           ['block6e_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block6e_add (Add)              (None, 7, 5, 208)    0           ['block6e_drop[0][0]',           \n",
      "                                                                  'block6d_add[0][0]']            \n",
      "                                                                                                  \n",
      " block7a_expand_conv (Conv2D)   (None, 7, 5, 1248)   259584      ['block6e_add[0][0]']            \n",
      "                                                                                                  \n",
      " block7a_expand_bn (BatchNormal  (None, 7, 5, 1248)  4992        ['block7a_expand_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " block7a_expand_activation (Act  (None, 7, 5, 1248)  0           ['block7a_expand_bn[0][0]']      \n",
      " ivation)                                                                                         \n",
      "                                                                                                  \n",
      " block7a_dwconv (DepthwiseConv2  (None, 7, 5, 1248)  11232       ['block7a_expand_activation[0][0]\n",
      " D)                                                              ']                               \n",
      "                                                                                                  \n",
      " block7a_bn (BatchNormalization  (None, 7, 5, 1248)  4992        ['block7a_dwconv[0][0]']         \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block7a_activation (Activation  (None, 7, 5, 1248)  0           ['block7a_bn[0][0]']             \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block7a_se_squeeze (GlobalAver  (None, 1248)        0           ['block7a_activation[0][0]']     \n",
      " agePooling2D)                                                                                    \n",
      "                                                                                                  \n",
      " block7a_se_reshape (Reshape)   (None, 1, 1, 1248)   0           ['block7a_se_squeeze[0][0]']     \n",
      "                                                                                                  \n",
      " block7a_se_reduce (Conv2D)     (None, 1, 1, 52)     64948       ['block7a_se_reshape[0][0]']     \n",
      "                                                                                                  \n",
      " block7a_se_expand (Conv2D)     (None, 1, 1, 1248)   66144       ['block7a_se_reduce[0][0]']      \n",
      "                                                                                                  \n",
      " block7a_se_excite (Multiply)   (None, 7, 5, 1248)   0           ['block7a_activation[0][0]',     \n",
      "                                                                  'block7a_se_expand[0][0]']      \n",
      "                                                                                                  \n",
      " block7a_project_conv (Conv2D)  (None, 7, 5, 352)    439296      ['block7a_se_excite[0][0]']      \n",
      "                                                                                                  \n",
      " block7a_project_bn (BatchNorma  (None, 7, 5, 352)   1408        ['block7a_project_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " block7b_expand_conv (Conv2D)   (None, 7, 5, 2112)   743424      ['block7a_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block7b_expand_bn (BatchNormal  (None, 7, 5, 2112)  8448        ['block7b_expand_conv[0][0]']    \n",
      " ization)                                                                                         \n",
      "                                                                                                  \n",
      " block7b_expand_activation (Act  (None, 7, 5, 2112)  0           ['block7b_expand_bn[0][0]']      \n",
      " ivation)                                                                                         \n",
      "                                                                                                  \n",
      " block7b_dwconv (DepthwiseConv2  (None, 7, 5, 2112)  19008       ['block7b_expand_activation[0][0]\n",
      " D)                                                              ']                               \n",
      "                                                                                                  \n",
      " block7b_bn (BatchNormalization  (None, 7, 5, 2112)  8448        ['block7b_dwconv[0][0]']         \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block7b_activation (Activation  (None, 7, 5, 2112)  0           ['block7b_bn[0][0]']             \n",
      " )                                                                                                \n",
      "                                                                                                  \n",
      " block7b_se_squeeze (GlobalAver  (None, 2112)        0           ['block7b_activation[0][0]']     \n",
      " agePooling2D)                                                                                    \n",
      "                                                                                                  \n",
      " block7b_se_reshape (Reshape)   (None, 1, 1, 2112)   0           ['block7b_se_squeeze[0][0]']     \n",
      "                                                                                                  \n",
      " block7b_se_reduce (Conv2D)     (None, 1, 1, 88)     185944      ['block7b_se_reshape[0][0]']     \n",
      "                                                                                                  \n",
      " block7b_se_expand (Conv2D)     (None, 1, 1, 2112)   187968      ['block7b_se_reduce[0][0]']      \n",
      "                                                                                                  \n",
      " block7b_se_excite (Multiply)   (None, 7, 5, 2112)   0           ['block7b_activation[0][0]',     \n",
      "                                                                  'block7b_se_expand[0][0]']      \n",
      "                                                                                                  \n",
      " block7b_project_conv (Conv2D)  (None, 7, 5, 352)    743424      ['block7b_se_excite[0][0]']      \n",
      "                                                                                                  \n",
      " block7b_project_bn (BatchNorma  (None, 7, 5, 352)   1408        ['block7b_project_conv[0][0]']   \n",
      " lization)                                                                                        \n",
      "                                                                                                  \n",
      " block7b_drop (Dropout)         (None, 7, 5, 352)    0           ['block7b_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " block7b_add (Add)              (None, 7, 5, 352)    0           ['block7b_drop[0][0]',           \n",
      "                                                                  'block7a_project_bn[0][0]']     \n",
      "                                                                                                  \n",
      " top_conv (Conv2D)              (None, 7, 5, 1408)   495616      ['block7b_add[0][0]']            \n",
      "                                                                                                  \n",
      " top_bn (BatchNormalization)    (None, 7, 5, 1408)   5632        ['top_conv[0][0]']               \n",
      "                                                                                                  \n",
      " top_activation (Activation)    (None, 7, 5, 1408)   0           ['top_bn[0][0]']                 \n",
      "                                                                                                  \n",
      " max_pool (GlobalMaxPooling2D)  (None, 1408)         0           ['top_activation[0][0]']         \n",
      "                                                                                                  \n",
      " flatten_41 (Flatten)           (None, 1408)         0           ['max_pool[0][0]']               \n",
      "                                                                                                  \n",
      " dense_89 (Dense)               (None, 500)          704500      ['flatten_41[0][0]']             \n",
      "                                                                                                  \n",
      " dropout_16 (Dropout)           (None, 500)          0           ['dense_89[0][0]']               \n",
      "                                                                                                  \n",
      " dense_90 (Dense)               (None, 5)            2505        ['dropout_16[0][0]']             \n",
      "                                                                                                  \n",
      "==================================================================================================\n",
      "Total params: 8,475,574\n",
      "Trainable params: 707,005\n",
      "Non-trainable params: 7,768,569\n",
      "__________________________________________________________________________________________________\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/meshael/.local/lib/python3.9/site-packages/keras/optimizer_v2/adam.py:105: UserWarning: The `lr` argument is deprecated, use `learning_rate` instead.\n",
      "  super(Adam, self).__init__(name, **kwargs)\n"
     ]
    }
   ],
   "source": [
    "## EfficientNetB2\n",
    "\n",
    "import tensorflow as tf\n",
    "from tensorflow.keras import optimizers  \n",
    "from tensorflow.keras.optimizers import RMSprop\n",
    "from tensorflow.keras.models import Model, load_model, Sequential\n",
    "\n",
    "\n",
    "base4=tf.keras.applications.EfficientNetB2(include_top=False, weights=\"imagenet\",input_shape=(200,150,3), pooling='max')\n",
    "\n",
    "\n",
    "for layer in base.layers:\n",
    "    layer.trainable = False\n",
    "    \n",
    "    \n",
    "model_tr4 = Sequential(\n",
    "                        [InputLayer(input_shape=(200,150,3)),  \n",
    "                         base4,\n",
    "                         Flatten(),\n",
    "                         Dense(500, activation='tanh'),   \n",
    "                         Dense(Dropout(0.5)), \n",
    "                         Dense(5, activation='softmax')])\n",
    "\n",
    "\n",
    "model_tr4.compile( keras.optimizers.Adam(lr=0.001),\n",
    "                   loss='categorical_crossentropy',\n",
    "                   metrics=['accuracy'])\n",
    "\n",
    "model_tr4.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "id": "64a981da",
   "metadata": {
    "collapsed": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/30\n",
      "96/96 [==============================] - ETA: 0s - loss: 1.9617 - accuracy: 0.2941"
     ]
    },
    {
     "ename": "KeyboardInterrupt",
     "evalue": "",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
      "\u001b[0;32m/var/folders/yp/mrrrdhms149_ntzbn52gyyx00000gr/T/ipykernel_86072/1633098784.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m model_tr4.fit(\n\u001b[0m\u001b[1;32m      2\u001b[0m   \u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train_cat\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m         \u001b[0mvalidation_data\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_val\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_val_cat\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m         \u001b[0mepochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m30\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m         \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m32\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/.local/lib/python3.9/site-packages/keras/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     62\u001b[0m     \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     63\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 64\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     65\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint: disable=broad-except\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     66\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/.local/lib/python3.9/site-packages/keras/engine/training.py\u001b[0m in \u001b[0;36mfit\u001b[0;34m(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_batch_size, validation_freq, max_queue_size, workers, use_multiprocessing)\u001b[0m\n\u001b[1;32m   1250\u001b[0m                 \u001b[0mmodel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1251\u001b[0m                 steps_per_execution=self._steps_per_execution)\n\u001b[0;32m-> 1252\u001b[0;31m           val_logs = self.evaluate(\n\u001b[0m\u001b[1;32m   1253\u001b[0m               \u001b[0mx\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mval_x\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1254\u001b[0m               \u001b[0my\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mval_y\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/.local/lib/python3.9/site-packages/keras/utils/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m     62\u001b[0m     \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     63\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 64\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     65\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# pylint: disable=broad-except\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     66\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/.local/lib/python3.9/site-packages/keras/engine/training.py\u001b[0m in \u001b[0;36mevaluate\u001b[0;34m(self, x, y, batch_size, verbose, sample_weight, steps, callbacks, max_queue_size, workers, use_multiprocessing, return_dict, **kwargs)\u001b[0m\n\u001b[1;32m   1535\u001b[0m             \u001b[0;32mwith\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprofiler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTrace\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'test'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstep_num\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_r\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1536\u001b[0m               \u001b[0mcallbacks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mon_test_batch_begin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1537\u001b[0;31m               \u001b[0mtmp_logs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtest_function\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0miterator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1538\u001b[0m               \u001b[0;32mif\u001b[0m \u001b[0mdata_handler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshould_sync\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1539\u001b[0m                 \u001b[0mcontext\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0masync_wait\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/.local/lib/python3.9/site-packages/tensorflow/python/util/traceback_utils.py\u001b[0m in \u001b[0;36merror_handler\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    148\u001b[0m     \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    149\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 150\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    151\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0mException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    152\u001b[0m       \u001b[0mfiltered_tb\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_process_traceback_frames\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__traceback__\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/.local/lib/python3.9/site-packages/tensorflow/python/eager/def_function.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    908\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    909\u001b[0m       \u001b[0;32mwith\u001b[0m \u001b[0mOptionalXlaContext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_jit_compile\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 910\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    911\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    912\u001b[0m       \u001b[0mnew_tracing_count\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexperimental_get_tracing_count\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/.local/lib/python3.9/site-packages/tensorflow/python/eager/def_function.py\u001b[0m in \u001b[0;36m_call\u001b[0;34m(self, *args, **kwds)\u001b[0m\n\u001b[1;32m    979\u001b[0m               *args, **kwds)\n\u001b[1;32m    980\u001b[0m       \u001b[0;31m# If we did not create any variables the trace we have is good enough.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 981\u001b[0;31m       return self._concrete_stateful_fn._call_flat(\n\u001b[0m\u001b[1;32m    982\u001b[0m           filtered_flat_args, self._concrete_stateful_fn.captured_inputs)  # pylint: disable=protected-access\n\u001b[1;32m    983\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/.local/lib/python3.9/site-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36m_call_flat\u001b[0;34m(self, args, captured_inputs, cancellation_manager)\u001b[0m\n\u001b[1;32m   1957\u001b[0m         and executing_eagerly):\n\u001b[1;32m   1958\u001b[0m       \u001b[0;31m# No tape is watching; skip to running the function.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1959\u001b[0;31m       return self._build_call_outputs(self._inference_function.call(\n\u001b[0m\u001b[1;32m   1960\u001b[0m           ctx, args, cancellation_manager=cancellation_manager))\n\u001b[1;32m   1961\u001b[0m     forward_backward = self._select_forward_and_backward_functions(\n",
      "\u001b[0;32m~/.local/lib/python3.9/site-packages/tensorflow/python/eager/function.py\u001b[0m in \u001b[0;36mcall\u001b[0;34m(self, ctx, args, cancellation_manager)\u001b[0m\n\u001b[1;32m    596\u001b[0m       \u001b[0;32mwith\u001b[0m \u001b[0m_InterpolateFunctionError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    597\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mcancellation_manager\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 598\u001b[0;31m           outputs = execute.execute(\n\u001b[0m\u001b[1;32m    599\u001b[0m               \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msignature\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    600\u001b[0m               \u001b[0mnum_outputs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_num_outputs\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/.local/lib/python3.9/site-packages/tensorflow/python/eager/execute.py\u001b[0m in \u001b[0;36mquick_execute\u001b[0;34m(op_name, num_outputs, inputs, attrs, ctx, name)\u001b[0m\n\u001b[1;32m     56\u001b[0m   \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     57\u001b[0m     \u001b[0mctx\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mensure_initialized\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 58\u001b[0;31m     tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\n\u001b[0m\u001b[1;32m     59\u001b[0m                                         inputs, attrs, num_outputs)\n\u001b[1;32m     60\u001b[0m   \u001b[0;32mexcept\u001b[0m \u001b[0mcore\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_NotOkStatusException\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
     ]
    }
   ],
   "source": [
    "model_tr4.fit(  X_train, y_train_cat,  \n",
    "                validation_data=(X_val, y_val_cat),\n",
    "                epochs=30,\n",
    "                batch_size=32,\n",
    "                callbacks=[early_stopping])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "id": "2043bc66",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training: 0.39698657058630854\n",
      "Val: 0.4323529411764706\n"
     ]
    }
   ],
   "source": [
    "get_accuracy(model_tr4)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "32425f8e",
   "metadata": {},
   "source": [
    "## kaggle code "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fe13b64d",
   "metadata": {},
   "outputs": [],
   "source": [
    "import tensorflow as tf\n",
    "import keras\n",
    "from tensorflow.keras import regularizers\n",
    "from tensorflow.keras.optimizers import Adam, Adamax\n",
    "from tensorflow.keras.models import Model, load_model, Sequential\n",
    "from keras.layers import Dense, Conv2D, MaxPooling2D, Flatten, GlobalAveragePooling2D, InputLayer,Dropout\n",
    "\n",
    "\n",
    "model_name='EfficientNetB2'\n",
    "base_model=tf.keras.applications.EfficientNetB2(include_top=False, weights=\"imagenet\",input_shape=(150,150,3), pooling='max')\n",
    "x=base_model.output\n",
    "x=keras.layers.BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001 )(x)\n",
    "x = Dense(256, kernel_regularizer = regularizers.l2(0.016),activity_regularizer=regularizers.l1(0.006),\n",
    "                bias_regularizer=regularizers.l1(0.006) ,activation='tanh')(x)\n",
    "x=Dropout(rate=.45, seed=123)(x)        \n",
    "output=Dense(5, activation='softmax')(x)\n",
    "model=Model(inputs=base_model.input, outputs=output)\n",
    "model.compile(Adamax(lr=.0015), loss='categorical_crossentropy', metrics=['accuracy']) \n",
    "model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9979a186",
   "metadata": {},
   "outputs": [],
   "source": [
    "epochs =10\n",
    "patience= 1 # number of epochs to wait to adjust lr if monitored value does not improve\n",
    "stop_patience =3 # number of epochs to wait before stopping training if monitored value does not improve\n",
    "threshold=.9 # if train accuracy is < threshhold adjust monitor accuracy, else monitor validation loss\n",
    "factor=.5 # factor to reduce lr by\n",
    "dwell=True # experimental, if True and monitored metric does not improve on current epoch set  modelweights back to weights of previous epoch\n",
    "freeze=False \n",
    "ask_epoch=2 \n",
    "\n",
    "\n",
    "model.fit_generator(train_generator,\n",
    "                   epochs=30, \n",
    "                   validation_data=val_generator,\n",
    "                   callbacks=[early_stopping])\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
